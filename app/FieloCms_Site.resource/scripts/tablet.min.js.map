{"version":3,"sources":["fieloUtils.js","siteConfig.js","mdlComponentHandler.js","tooltip.js","output.js","spinner.js","message.js","modal.js","footer.js","slider.js","recordset.js","record.js","paginator.js","orderBy.js","filter.js","appMenu.js","navigation.js","oldLoader.js","components.js","forms.js","formView.js","oldLoaderTrigger.js"],"names":["fieloUtils","debug","log","message","fileName","Error","getUrlContent","url","xmlhttp","XMLHttpRequest","open","send","onreadystatechange","readyState","DONE","status","responseText","ajax","asyncMode","callback","content","parser","DOMParser","xmlDoc","parseFromString","getElementsByTagName","decodeHTMLEntities","text","entities","i","max","length","replace","RegExp","removeChilds","element","lastChild","removeChild","getParentUntil","selector","search","firstChar","charAt","substr","document","parentNode","classList","contains","id","split","attribute","trim","hasAttribute","value","attributeValue","getAttribute","indexOf","tagName","toLowerCase","throttle","type","name","obj","window","running","func","requestAnimationFrame","dispatchEvent","CustomEvent","addEventListener","initialize","Element","prototype","remove","this","site","querySelector","FieloSite","element_","DataAttribute_","PACKAGE_PREFIX","SITE_PATH","CssClasses_","requestToConfig_","sitePath_","ns","setConfig_","data","config","JSON","parse","innerHTML","getLabel","label","init","urlToConfig_","bind","componentHandler","upgradeDom","optJsClass","optCssClass","upgradeElement","upgradeElements","elements","upgradeAllRegistered","registerUpgradedCallback","jsClass","register","downgradeElements","nodes","findRegisteredClass_","optReplace","registeredComponents_","className","getUpgradedListOfElement_","dataUpgraded","isElementUpgraded_","upgradedList","upgradeDomInternal","cssClass","registeredClass","querySelectorAll","n","upgradeElementInternal","classesToUpgrade","push","forEach","component","setAttribute","join","instance","classConstructor","componentConfigProperty_","createdComponents_","j","m","callbacks","widget","ev","createEvent","initEvent","upgradeElementsInternal","Array","isArray","item","slice","call","HTMLElement","children","registerInternal","widgetMissing","newConfig","constructor","classAsString","hasOwnProperty","found","registerUpgradedCallbackInternal","regClass","upgradeAllRegisteredInternal","deconstructComponentInternal","componentIndex","splice","upgrades","componentPlace","downgradeNodesInternal","downgradeNode","node","filter","NodeList","Node","ComponentConfigPublic","ComponentConfig","Component","documentElement","add","MaterialTooltip","Constant_","IS_ACTIVE","BOTTOM","LEFT","RIGHT","TOP","handleMouseEnter_","event","props","target","getBoundingClientRect","left","width","top","height","marginLeft","offsetWidth","marginTop","offsetHeight","style","hideTooltip_","forElId","forElement_","getElementById","boundMouseEnterHandler","boundMouseLeaveAndScrollHandler","FieloOutput","TIME","setDefaults_","config_","locale","type_","value_","convertValue_","newValue","Date","setTime","isNaN","toLocaleDateString","toLocaleTimeString","Number","parseInt","toLocaleString","parseFloat","currencyIsoCode","currency","innerText","FieloSpinner","HIDDEN","show","hide","preventDefault","stopPropagation","spinner","FieloMessage","TYPE_PREFIX","TYPE_DEFAULT","REDIRECT_WAIT_DEFAULT","MESSAGE","COUNTER","FADE_IN","FADE_OUT","TYPE_CONFIRM","TYPE_INFO","TYPE_ERROR","TYPE_FATAL","TYPE_WARNING","registerTypes_","redirect_","active","wait","isAnimated_","setAnimationListeners_","animationStarted","animationNewIteration","animationEnded","selectedType_","types_","property","clearType_","typeValue","createCounterButton_","counter","createElement","appendChild","counter_","deleteCounterButton_","runTimer_","setTimeout","doRedirect","clickEventListener_","animate","boolean","addMessages","messages","l","p","setType","toUpperCase","setRedirect","seconds","location","href","clear","e","animationName","FieloModal","CLOSE","BODY","BODY_CONTAINER","CALLED_BY","closeBtn_","body_","bodyContainer_","closeEventListener_","registerCloseElements_","noClosingEventListener_","registerNoClosingElements_","setCloseLabel","setContent","setCalledBy","calledBy","modal","FieloFooter","PUSHER","pusher_","setListeners_","resize","FieloSlider","SLIDING","ARROW_PREVIOUS","ARROW_NEXT","CONTAINER","SLIDES","setStyles_","styles","concatenatedStyles","currentSlide_","container_","slides_","quantity_","width_","arrow_","previous","next","setKeyframeRule_","containerStyles_","play_","delay_","keyframes_","styleSheets","sheet","cssRules","rule","setKeyframe_","setContainerWidth_","saveCurrentPosition_","setSlidesProperties_","slide","setSlideLinks_","setSlidesWidth_","registerNavigation_","goPrevious","goNext","goToSlide","setAutoPlay","FieloRecordSet","DATA_VALUE","DATA_LAYOUT","DATA_UPGRADED","DATA_ATTRIBUTE_REPLACE","DATA_DETAIL_PARAMETER","DATA_OBJECT_PROPERTY","MODULE_OUTPUT","MODULE_RECORD","MODULE_RECORD_SET","DATA","DATA_DISABLED","TEMPLATE","RECORD","FIELD_IS","FIELD_IS_DETAIL","OUTPUT","LINK_TO_DETAIL","FIELD_VALUE","ns_","layout_","data_","setRecordsObject_","records_","inTemplate","setRecordSetTemplate_","setRecordTemplate_","onlyOneTemplate_","recordSetTemplate_","isEqualNode","recordTemplate_","tempElement","inPage","fields","cloneNode","removeAttribute","cleanDataChilds_","setFieldsValues_","record","newRecord","fieldName","field","outputField","setLinksToDetailValues_","link","params","base","detailParam","param","index","Id","setSubcomponentsValues_","propertyName","attributeName","render","records","Object","keys","newSetOfTemplates","newSetOfRecords","recordsAddedInTotal","recordsAddedPerTemplate","template","newTemplate","hasChildNodes","firstChild","FieloRecord","initForms","LINK_IS_PAGE","LINK_IS_MODAL","LINK_IS_ACCORDION","FIELD","RECORD_SET","FIELD_IS_ACCORDION","DETAIL","COMPONENT_NAME","detailIsLoaded_","linksToDetail_","recordset_","componentName_","setLinksListeners_","clickListener","createDetail_","nodeName","detail_","childElementCount","upgrade_","hasLinkToPage","toggle","detailForModal","setDetailContent","link_","body","insertBefore","nextSibling","oldLoader","initForms_","FieloPaginator","COMPONENT_ID","BINDING","QUANTITY_PER_PAGE","PAGE","FILTERS","ORDER_BY","LINK_PREVIOUS","LINK_NEXT","DISABLED","recordSet","controller_","componentId_","dataBinding_","recordsPerPage_","recordsInPage_","page_","filters_","orderBy_","links_","setLinksStatus_","getPreviousPage_","setPage","getRecords","getNextPage_","setUpLinks_","pageNumber","getFilters","setFilters","newFilters","stringify","filters","setOrderBy","order","resolveRequest_","Visualforce","remoting","Manager","invokeAction","escape","FieloOrderBy","ORDER_VALUE","DATA_MENU_TYPE","PAGINATOR","MENU_IS_OPEN","ORDER_BY_ITEM","ASC","DESC","ACTIVE","defaults_","menuType","orderValue","recordSet_","paginator_","menuType_","items_","itemActive_","orderValue_","allowActive_","setAllowActiveByType_","checkAllowActive_","toggleOpen_","activeItem_","itemClickListener_","click","setupItems_","FieloFilter","DATA_ID","CATEGORY","TAG","LIST","ITEM","LINK","list_","setType_","bindWithPaginators_","listOfPaginators_","cleanActiveCss_","checkIfItemIsAlreadyActive_","clickedOnSameItem_","removeFilter_","itemActive","addFilter_","Category__c","Tag__c","dataId","paginator","FieloAppMenu","APP_MENU_CONTAINER","APP_MENU_BTN","APP_MENU_BTN_OPEN","APP_MENU_SLIDE_IN","APP_MENU_SLIDE_OUT","isOpen_","toggleBtn_","dataset","upgraded","elementUpgrades","upgrade","menuBtn_","toggleMenu_","addToMenu","appMenu","FieloMenu","APP_MENU","LIST_ITEM","HOVER","isAppMenu_","menuChilds_","parentsActive_","checkHover_","elementMouseIsOver","actualParent","removeHover_","shift","upgradeMenus_","menuParents_","child","parent","appMenuEnabled_","addToAppMenu_","menu","eventName","eventListener","modules","DOMContentLoaded","DOMContentReloaded","AjaxBeforeSend","AjaxComplete","ObjectChange","dispatchElementEvent","evt","fireEvent","module","loadModule","getName","ajaxStart","ajaxStop","load","parentElement","beforeElement","version","urlPath","getVersion","refreshView","componentId","recordParameter","sObjectInput","recordId","urlToRequest","background","componentParent","componentSibling","switchBack","switchView","view","changeView","form","button","disabled","refreshDataObject","maxFields","parts","submitDataObject","submitForm","submitionIsConfirmed","checkValidity","remoteAction","argument","dataToSubmit","remoteArguments","invokeData","result","processRemoteActionResult","apply","undefined","error","maximun","severity","cancelButton","componentContainer","messageSummary","summary","redirectURL","components","refresh","objectName","object","addToCartEvent","input","clickActionButton","remoteaction","clickDeleteButton","quantity","save","hasToConfirmButton","confirm","likeWishEvent","imageUploadEvent","apiName","extensions","buttonSubmit","archiveExtension","reader","FileReader","onload","dataURL","inputData","readAsDataURL","files","captchaEvent","grecaptcha","getResponse","toogleForgotPassword","toogleLink","inputPassword","labelUserName","fieldPassword","oldInputLabel","newInputLabel","oldLinkLabel","newLinkLabel","remoteController","substring","lastIndexOf","addFormListener","reload","cancel","addLoginListener","forgot","addInputFieldListener","inputs","required","d","dt","getTime","getTimezoneOffset","mm","getMonth","dd","getDate","getFullYear","addDirtyClass","srcElement","contentLoadedForm","isCaptcha","script","src","forms","contentLoaded","contentLoadedDetail","detail","edit","refreshDetail","details","FieloOldLoaderTrigger"],"mappings":"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","file":"tablet.min.js","sourcesContent":["/**\n * @description Librería de utilidades de Fielo\n *\n * @author Hugo Gómez Mac Gregor <hugo.gomez@fielo.com>\n * @author Sebastian Claros <sebastian.claros@fielo.com>\n * @version 2\n  */\n\nvar fieloUtils = (function() {\n  'use strict';\n\n  // Return an object exposed to the public\n  return {\n    debug: {\n     /**\n     * @method\n     * @summary Muestra la información del error.\n     * @param {string} message - Mensaje a enviar por consola\n     * @param {string} fileName - Nombre del archivo donde se produce el error.\n     *\n     * @public\n     */\n      log: function(message, fileName) {\n        message = message || 'Message not specified';\n        fileName = fileName || 'File name not specified';\n\n        throw new Error(message, fileName);\n      }\n    },\n\n    /**\n     * @method\n     * @summary Obtiene el contenido de una url\n     * @param  {string} url - url a la cual hacer el ajax\n     */\n    getUrlContent: function(url) {\n      var xmlhttp = new XMLHttpRequest();\n      xmlhttp.open('GET', url);\n      xmlhttp.send();\n      xmlhttp.onreadystatechange = function() {\n        if (xmlhttp.readyState === XMLHttpRequest.DONE) {\n          if (xmlhttp.status === 200) {\n            return xmlhttp.responseText;\n          }\n          return 'There was an error loding the content: code error ' +\n            xmlhttp.status;\n        }\n      };\n    },\n\n    /**\n     * @method\n     * @summary Levanta una petición ajax\n     *\n     * @param {string}    url        URL a la cual se realiza la petición\n     * @param {boolean}   asyncMode  Modo de la petición ajax\n     * @param {function}  callback   Función a ejecutar al terminar el ajax\n     * @returns Ejecuta el callback teniendo como parámetros a content y xmlhttp.status\n     */\n\n    ajax: function(url, asyncMode, callback) {\n      var xmlhttp = new XMLHttpRequest();\n      xmlhttp.onreadystatechange = function() {\n        if (xmlhttp.readyState === XMLHttpRequest.DONE) {\n          var content = null;\n          if (xmlhttp.status === 200) {\n            var parser = new DOMParser();\n            var xmlDoc = parser.parseFromString(\n              xmlhttp.responseText,\n              'text/html'\n            );\n            content = xmlDoc.getElementsByTagName('body')[0];\n          }\n          callback(content, xmlhttp.status);\n        }\n      };\n      xmlhttp.open('GET', url, asyncMode);\n      xmlhttp.send();\n    },\n\n     /**\n      * @method\n      * @summary Decodifica los caracteres a entidades correctas\n      *\n      * @param {string} text String adecodificar\n      * @return {string} Texto decodificado\n      */\n    decodeHTMLEntities: function(text) {\n      var entities = [\n        ['apos', '\\''],\n        ['amp', '&'],\n        ['lt', '<'],\n        ['gt', '>']\n      ];\n\n      for (var i = 0, max = entities.length; i < max; ++i) {\n        text = text.replace(\n          new RegExp('&' + entities[i][0] + ';', 'g'), entities[i][\n            1]\n        );\n      }\n\n      return text;\n    },\n\n    /**\n     * @method\n     * @summary Remueve un nodo HTML\n     *\n     * @param {DOMelement} element Nodo HTML a remover\n     */\n    removeChilds: function(element) {\n      while (element.lastChild) {\n        element.removeChild(element.lastChild);\n      }\n    },\n\n    /**\n     * @method\n     * @summary Devuelve el elemento padre<br>\n     *\n     * Obtenido de {@link http://gomakethings.com/climbing-up-and-down-the-dom-tree-with-vanilla-javascript/}\n     * @param {DOMelement} element  Elemento HTML al cual se busca el padre\n     * @param {string} selector Selector CSS que indica cuál tiene que ser su padre\n     * @return {DOMelement} Retorna el elemento padre\n     */\n\n    getParentUntil: function(element, selector) {\n      var firstChar = selector.charAt(0);\n      var search;\n      switch (firstChar) {\n        case '.':\n          // Si el selector es .XXXX => Busca si hay un ansestro que contenga la clase XXX\n          for (\n            search = selector.substr(1); element && element !==\n            document; element = element.parentNode\n          ) {\n            if (element.classList.contains(search)) {\n              return element;\n            }\n          }\n          break;\n        case '#':\n          // Si el selector es #XXXX => Busca si hay un ansestro con ID=XXX\n          for (\n            search = selector.substr(1); element && element !==\n            document; element = element.parentNode\n          ) {\n            if (element.id === search) {\n              return element;\n            }\n          }\n          break;\n        case '[':\n          // Si el selector es [XXXX] => Busca si hay un ansestro con un atributo XXX\n          // Si el selector es [XXXX=YYY] => Busca si hay un ansestro con un atributo XXX=YYY\n          // Si el selector es [XXXX~=YYY] => Busca si hay un ansestro con un atributo XXX que contengYYY\n          search = selector.substr(1, selector.length - 2).split('=');\n          var attribute = search[0].trim();\n          if (search.length === 1) {\n            for (; element && element !== document; element = element\n              .parentNode) {\n              if (element.hasAttribute(attribute)) {\n                return element;\n              }\n            }\n          } else if (search.length === 2) {\n            var contains = false;\n            var value = search[1].trim();\n            if (attribute.substr(attribute.length - 1, 1) === '~') {\n              attribute = attribute.substr(0, attribute.length - 1);\n              contains = true;\n            }\n            for (; element && element !== document; element = element\n              .parentNode) {\n              if (element.hasAttribute(attribute)) {\n                var attributeValue = element.getAttribute(attribute);\n                if (\n                  attributeValue === value ||\n                  (contains === true && attributeValue.indexOf(value) >=\n                    0)\n                ) {\n                  return element;\n                }\n              }\n            }\n          } else {\n            fieloUtils.debug.log('Invalid selector:' + selector);\n          }\n          break;\n        default:\n          // Si el selector es XXXX => Busca si hay un ansestro con el Tag XXX\n          for (\n            ; element && element !== document;\n            element = element.parentNode\n          ) {\n            if (element.tagName.toLowerCase() === selector) {\n              return element;\n            }\n          }\n          break;\n      }\n      return false;\n    },\n\n    /**\n     * @method\n     * @summary Devuelve null\n     *\n     * @param {string} type Tipo de listener original\n     * @param {string} name listener a crear\n     * @param {DOMelement} obj objeto a aplicar el listener\n     */\n    throttle: function(type, name, obj) {\n      obj = obj || window;\n      var running = false;\n      var func = function() {\n        if (running) {\n          return;\n        }\n        running = true;\n        requestAnimationFrame(function() {\n          obj.dispatchEvent(new CustomEvent(name));\n          running = false;\n        });\n      };\n      obj.addEventListener(type, func);\n    },\n\n    /**\n     * @summary Inicializa la configuración<br>\n     *\n     * 1.- Setea el prefijo del paquete en el atributo data-package-prefix de la etiqueta html<br>\n     * 2.- Setea el path del sitio en el atributo data-sitepath de la etiqueta html\n     */\n    initialize: function() {\n      // adds compability for IE 11\n      if (!('remove' in Element.prototype)) {\n        Element.prototype.remove = function() {\n          if (this.parentNode) {\n            this.parentNode.removeChild(this);\n          }\n        };\n      }\n      this.throttle('resize', 'optimizedResize');\n    }\n  };\n})();\n\nwindow.fieloUtils = fieloUtils;\nfieloUtils.initialize();\n","  /**\n   * @description Clase constructora para el Site.\n   * FieloSite muestra / oculta el spinner\n   * Implementa los patrones de diseño definidos por MDL en\n   * {@link https://github.com/jasonmayes/mdl-component-design-pattern}\n   *\n   * @version 1.0\n   * @author Hugo Gómez Mac Gregor <hugo.gomez@fielo.com>\n   * @param {HTMLElement} element - Elemento que será mejorado.\n   * @constructor\n   */\n\n(function() {\n  'use strict';\n\n  var site = document.querySelector('.fielo-site');\n\n  var FieloSite = {};\n  site.FieloSite = FieloSite;\n  FieloSite.element_ = site;\n\n/**\n   * Guarda strings para nombres de atributos data\n   * Esto nos permite cambiarlos solo en un lugar\n   * @enum {string}\n   * @private\n   */\n\n  FieloSite.DataAttribute_ = {\n    // Nombre del prefijo\n    PACKAGE_PREFIX: 'data-package-prefix',\n    // Site Path\n    SITE_PATH: 'data-sitepath'\n  };\n\n  /**\n   * Guarda strings para nombres de clases definidas por este componente\n   * que son usadas por JavaScript.\n   * Esto nos permite cambiarlos solo en un lugar\n   * @enum {string}\n   * @private\n   */\n\n  FieloSite.CssClasses_ = {\n    // Nombre para ocultar el elemento\n    PACKAGE_PREFIX: 'data-package-prefix'\n  };\n\n  /**\n   * @method\n   * @private\n   * @summary Crea la url para el site config\n   *\n   * @return {string} Retorna la url para el siteConfig\n   */\n\n  FieloSite.requestToConfig_ = function() {\n    // Construyo la url al SiteConfig\n    var url = '/';\n    if (this.sitePath_ !== '') {\n      url += this.sitePath_ + '/';\n    }\n    if (this.ns !== '') {\n      url += this.ns + '__';\n    }\n    url += 'SiteConfig';\n\n    return url;\n  };\n\n  /**\n   * Guarda en config las variables que vienen de la página SiteConfig\n   * @param {HTMLelement} data - Data que contiene la configuración\n   * @param {Number} status - Status del AJAX\n   */\n\n  FieloSite.setConfig_ = function(data, status) {\n    if (status === 200) {\n      this.config = JSON.parse(data.innerHTML);\n    } else {\n      this.config = null;\n    }\n  };\n\n  /**\n   * Devuelve el label correspondiente\n   * @param {String} label - label a pedir\n   *\n   * @return {String} Label\n   */\n\n  FieloSite.getLabel = function(label) {\n    if (\n      this.config !== null &&\n      typeof this.config.label[label] !== 'undefined'\n    ) {\n      return this.config.label[label];\n    }\n    return label;\n  };\n\n  /**\n   * Inicializa el elemento\n   */\n  FieloSite.init = function() {\n    // Seteo el namespace\n    this.ns = this.element_\n      .getAttribute(this.DataAttribute_.PACKAGE_PREFIX);\n\n    // Seteo el site path\n    this.sitePath_ = this.element_\n      .getAttribute(this.DataAttribute_.SITE_PATH);\n    // Inicializo config_\n    this.config = '';\n\n    // Seteo la URL\n    this.urlToConfig_ = this.requestToConfig_();\n\n    // Petición a la URL del site config y guarda la configuración\n    fieloUtils.ajax(this.urlToConfig_, false, this.setConfig_.bind(this));\n\n    // Disponibiliza el site en fieloUtils\n    fieloUtils.site = this.element_;\n  };\n\n  FieloSite.init();\n})();\n\n","/**\n * @license\n * Copyright 2015 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * A component handler interface using the revealing module design pattern.\n * More details on this design pattern here:\n * https://github.com/jasonmayes/mdl-component-design-pattern\n *\n * @author Jason Mayes.\n */\n/* exported componentHandler */\n\n// Pre-defining the componentHandler interface, for closure documentation and\n// static verification.\nvar componentHandler = {\n  /**\n   * Searches existing DOM for elements of our component type and upgrades them\n   * if they have not already been upgraded.\n   *\n   * @param {string=} optJsClass the programatic name of the element class we\n   * need to create a new instance of.\n   * @param {string=} optCssClass the name of the CSS class elements of this\n   * type will have.\n   */\n  upgradeDom: function(optJsClass, optCssClass) {}, // eslint-disable-line\n  /**\n   * Upgrades a specific element rather than all in the DOM.\n   *\n   * @param {!Element} element The element we wish to upgrade.\n   * @param {string=} optJsClass Optional name of the class we want to upgrade\n   * the element to.\n   */\n  upgradeElement: function(element, optJsClass) {}, // eslint-disable-line\n  /**\n   * Upgrades a specific list of elements rather than all in the DOM.\n   *\n   * @param {!Element|!Array<!Element>|!NodeList|!HTMLCollection} elements\n   * The elements we wish to upgrade.\n   */\n  upgradeElements: function(elements) {}, // eslint-disable-line\n  /**\n   * Upgrades all registered components found in the current DOM. This is\n   * automatically called on window load.\n   */\n  upgradeAllRegistered: function() {},\n  /**\n   * Allows user to be alerted to any upgrades that are performed for a given\n   * component type\n   *\n   * @param {string} jsClass The class name of the MDL component we wish\n   * to hook into for any upgrades performed.\n   * @param {function(!HTMLElement)} callback The function to call upon an\n   * upgrade. This function should expect 1 parameter - the HTMLElement which\n   * got upgraded.\n   */\n  registerUpgradedCallback: function(jsClass, callback) {}, // eslint-disable-line\n  /**\n   * Registers a class for future use and attempts to upgrade existing DOM.\n   *\n   * @param {componentHandler.ComponentConfigPublic} config the registration configuration\n   */\n  register: function(config) {}, // eslint-disable-line\n  /**\n   * Downgrade either a given node, an array of nodes, or a NodeList.\n   *\n   * @param {!Node|!Array<!Node>|!NodeList} nodes The list of nodes.\n   */\n  downgradeElements: function(nodes) {} // eslint-disable-line\n};\n\ncomponentHandler = (function() {\n  'use strict';\n\n  /** @type {!Array<componentHandler.ComponentConfig>} */\n  var registeredComponents_ = [];\n\n  /** @type {!Array<componentHandler.Component>} */\n  var createdComponents_ = [];\n\n  var componentConfigProperty_ = 'mdlComponentConfigInternal_';\n\n  /**\n   * Searches registered components for a class we are interested in using.\n   * Optionally replaces a match with passed object if specified.\n   *\n   * @param {string} name The name of a class we want to use.\n   * @param {componentHandler.ComponentConfig=} optReplace Optional object to replace match with.\n   * @return {!Object|boolean} Registered components.\n   * @private\n   */\n  function findRegisteredClass_(name, optReplace) {\n    for (var i = 0; i < registeredComponents_.length; i++) {\n      if (registeredComponents_[i].className === name) {\n        if (typeof optReplace !== 'undefined') {\n          registeredComponents_[i] = optReplace;\n        }\n        return registeredComponents_[i];\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Returns an array of the classNames of the upgraded classes on the element.\n   *\n   * @param {!Element} element The element to fetch data from.\n   * @return {!Array<string>} Array of classNames.\n   * @private\n   */\n  function getUpgradedListOfElement_(element) {\n    var dataUpgraded = element.getAttribute('data-upgraded');\n    // Use `['']` as default value to conform the `,name,name...` style.\n    return dataUpgraded === null ? [''] : dataUpgraded.split(',');\n  }\n\n  /**\n   * Returns true if the given element has already been upgraded for the given\n   * class.\n   *\n   * @param {!Element} element The element we want to check.\n   * @param {string} jsClass The class to check for.\n   * @return {boolean} Whether the element is upgraded.\n   * @private\n   */\n  function isElementUpgraded_(element, jsClass) {\n    var upgradedList = getUpgradedListOfElement_(element);\n    return upgradedList.indexOf(jsClass) !== -1;\n  }\n\n  /**\n   * Searches existing DOM for elements of our component type and upgrades them\n   * if they have not already been upgraded.\n   *\n   * @param {string=} optJsClass the programatic name of the element class we\n   * need to create a new instance of.\n   * @param {string=} optCssClass the name of the CSS class elements of this\n   * type will have.\n   */\n  function upgradeDomInternal(optJsClass, optCssClass) {\n    if (typeof optJsClass === 'undefined' &&\n        typeof optCssClass === 'undefined') {\n      for (var i = 0; i < registeredComponents_.length; i++) {\n        upgradeDomInternal(registeredComponents_[i].className,\n            registeredComponents_[i].cssClass);\n      }\n    } else {\n      var jsClass = /** @type {string} */ (optJsClass);\n      if (typeof optCssClass === 'undefined') {\n        var registeredClass = findRegisteredClass_(jsClass);\n        if (registeredClass) {\n          optCssClass = registeredClass.cssClass;\n        }\n      }\n\n      var elements = document.querySelectorAll('.' + optCssClass);\n      for (var n = 0; n < elements.length; n++) {\n        upgradeElementInternal(elements[n], jsClass);\n      }\n    }\n  }\n\n  /**\n   * Upgrades a specific element rather than all in the DOM.\n   *\n   * @param {!Element} element The element we wish to upgrade.\n   * @param {string=} optJsClass Optional name of the class we want to upgrade\n   * the element to.\n   */\n  function upgradeElementInternal(element, optJsClass) {\n    // Verify argument type.\n    if (!(typeof element === 'object' && element instanceof Element)) {\n      throw new Error('Invalid argument provided to upgrade MDL element.');\n    }\n    var upgradedList = getUpgradedListOfElement_(element);\n    var classesToUpgrade = [];\n    // If jsClass is not provided scan the registered components to find the\n    // ones matching the element's CSS classList.\n    if (!optJsClass) {\n      var classList = element.classList;\n      registeredComponents_.forEach(function(component) {\n        // Match CSS & Not to be upgraded & Not upgraded.\n        if (classList.contains(component.cssClass) &&\n            classesToUpgrade.indexOf(component) === -1 &&\n            !isElementUpgraded_(element, component.className)) {\n          classesToUpgrade.push(component);\n        }\n      });\n    } else if (!isElementUpgraded_(element, optJsClass)) {\n      classesToUpgrade.push(findRegisteredClass_(optJsClass));\n    }\n\n    // Upgrade the element for each classes.\n    for (var i = 0, n = classesToUpgrade.length, registeredClass; i < n; i++) {\n      registeredClass = classesToUpgrade[i];\n      if (registeredClass) {\n        // Mark element as upgraded.\n        upgradedList.push(registeredClass.className);\n        element.setAttribute('data-upgraded', upgradedList.join(','));\n        var instance = new registeredClass.classConstructor(element); // eslint-disable-line\n        instance[componentConfigProperty_] = registeredClass;\n        createdComponents_.push(instance);\n        // Call any callbacks the user has registered with this component type.\n        for (var j = 0, m = registeredClass.callbacks.length; j < m; j++) {\n          registeredClass.callbacks[j](element);\n        }\n\n        if (registeredClass.widget) {\n          // Assign per element instance for control over API\n          element[registeredClass.className] = instance;\n        }\n      } else {\n        throw new Error(\n          'Unable to find a registered component for the given class.');\n      }\n\n      var ev = document.createEvent('Events');\n      ev.initEvent('mdl-componentupgraded', true, true);\n      element.dispatchEvent(ev);\n    }\n  }\n\n  /**\n   * Upgrades a specific list of elements rather than all in the DOM.\n   *\n   * @param {!Element|!Array<!Element>|!NodeList|!HTMLCollection} elements\n   * The elements we wish to upgrade.\n   */\n  function upgradeElementsInternal(elements) {\n    if (!Array.isArray(elements)) {\n      if (typeof elements.item === 'function') {\n        elements = Array.prototype.slice.call(/** @type {Array} */ (elements));\n      } else {\n        elements = [elements];\n      }\n    }\n    for (var i = 0, n = elements.length, element; i < n; i++) {\n      element = elements[i];\n      if (element instanceof HTMLElement) {\n        upgradeElementInternal(element);\n        if (element.children.length > 0) {\n          upgradeElementsInternal(element.children);\n        }\n      }\n    }\n  }\n\n  /**\n   * Registers a class for future use and attempts to upgrade existing DOM.\n   *\n   * @param {componentHandler.ComponentConfigPublic} config The configuration.\n   */\n  function registerInternal(config) {\n    // In order to support both Closure-compiled and uncompiled code accessing\n    // this method, we need to allow for both the dot and array syntax for\n    // property access. You'll therefore see the `foo.bar || foo['bar']`\n    // pattern repeated across this method.\n    var widgetMissing = (typeof config.widget === 'undefined' &&\n        typeof config['widget'] === 'undefined');\n    var widget = true;\n\n    if (!widgetMissing) {\n      widget = config.widget || config['widget'];\n    }\n\n    var newConfig = /** @type {componentHandler.ComponentConfig} */ ({\n      classConstructor: config.constructor || config['constructor'],\n      className: config.classAsString || config['classAsString'],\n      cssClass: config.cssClass || config['cssClass'],\n      widget: widget,\n      callbacks: []\n    });\n\n    registeredComponents_.forEach(function(item) {\n      if (item.cssClass === newConfig.cssClass) {\n        throw new Error('The provided cssClass has already been registered: ' +\n            item.cssClass);\n      }\n      if (item.className === newConfig.className) {\n        throw new Error('The provided className has already been registered');\n      }\n    });\n\n    if (config.constructor.prototype\n        .hasOwnProperty(componentConfigProperty_)) {\n      throw new Error(\n          'MDL component classes must not have ' + componentConfigProperty_ +\n          ' defined as a property.');\n    }\n\n    var found = findRegisteredClass_(config.classAsString, newConfig);\n\n    if (!found) {\n      registeredComponents_.push(newConfig);\n    }\n  }\n\n  /**\n   * Allows user to be alerted to any upgrades that are performed for a given\n   * component type\n   *\n   * @param {string} jsClass The class name of the MDL component we wish\n   * to hook into for any upgrades performed.\n   * @param {function(!HTMLElement)} callback The function to call upon an\n   * upgrade. This function should expect 1 parameter - the HTMLElement which\n   * got upgraded.\n   */\n  function registerUpgradedCallbackInternal(jsClass, callback) {\n    var regClass = findRegisteredClass_(jsClass);\n    if (regClass) {\n      regClass.callbacks.push(callback);\n    }\n  }\n\n  /**\n   * Upgrades all registered components found in the current DOM. This is\n   * automatically called on window load.\n   */\n  function upgradeAllRegisteredInternal() {\n    for (var n = 0; n < registeredComponents_.length; n++) {\n      upgradeDomInternal(registeredComponents_[n].className);\n    }\n  }\n\n  /**\n   * Check the component for the downgrade method.\n   * Execute if found.\n   * Remove component from createdComponents list.\n   *\n   * @param {?componentHandler.Component} component The component to downgrade.\n   */\n  function deconstructComponentInternal(component) {\n    if (component) {\n      var componentIndex = createdComponents_.indexOf(component);\n      createdComponents_.splice(componentIndex, 1);\n\n      var upgrades =\n          component.element_.getAttribute('data-upgraded').split(',');\n      var componentPlace =\n          upgrades.indexOf(component[componentConfigProperty_].classAsString);\n      upgrades.splice(componentPlace, 1);\n      component.element_.setAttribute('data-upgraded', upgrades.join(','));\n\n      var ev = document.createEvent('Events');\n      ev.initEvent('mdl-componentdowngraded', true, true);\n      component.element_.dispatchEvent(ev);\n    }\n  }\n\n  /**\n   * Downgrade either a given node, an array of nodes, or a NodeList.\n   *\n   * @param {!Node|!Array<!Node>|!NodeList} nodes The list of nodes.\n   */\n  function downgradeNodesInternal(nodes) {\n    /**\n     * Auxiliary function to downgrade a single node.\n     * @param  {!Node} node the node to be downgraded\n     */\n    var downgradeNode = function(node) {\n      createdComponents_.filter(function(item) {\n        return item.element_ === node;\n      }).forEach(deconstructComponentInternal);\n    };\n    if (nodes instanceof Array || nodes instanceof NodeList) {\n      for (var n = 0; n < nodes.length; n++) {\n        downgradeNode(nodes[n]);\n      }\n    } else if (nodes instanceof Node) {\n      downgradeNode(nodes);\n    } else {\n      throw new Error('Invalid argument provided to downgrade MDL nodes.');\n    }\n  }\n\n  // Now return the functions that should be made public with their publicly\n  // facing names...\n  return {\n    upgradeDom: upgradeDomInternal,\n    upgradeElement: upgradeElementInternal,\n    upgradeElements: upgradeElementsInternal,\n    upgradeAllRegistered: upgradeAllRegisteredInternal,\n    registerUpgradedCallback: registerUpgradedCallbackInternal,\n    register: registerInternal,\n    downgradeElements: downgradeNodesInternal\n  };\n})();\n\n/**\n * Describes the type of a registered component type managed by\n * componentHandler. Provided for benefit of the Closure compiler.\n *\n * @typedef {{\n *   constructor: Function,\n *   classAsString: string,\n *   cssClass: string,\n *   widget: (string|boolean|undefined)\n * }}\n */\ncomponentHandler.ComponentConfigPublic; // eslint-disable-line\n\n/**\n * Describes the type of a registered component type managed by\n * componentHandler. Provided for benefit of the Closure compiler.\n *\n * @typedef {{\n *   constructor: !Function,\n *   className: string,\n *   cssClass: string,\n *   widget: (string|boolean),\n *   callbacks: !Array<function(!HTMLElement)>\n * }}\n */\ncomponentHandler.ComponentConfig; // eslint-disable-line\n\n/**\n * Created component (i.e., upgraded element) type as managed by\n * componentHandler. Provided for benefit of the Closure compiler.\n *\n * @typedef {{\n *   element_: !HTMLElement,\n *   className: string,\n *   classAsString: string,\n *   cssClass: string,\n *   widget: string\n * }}\n */\ncomponentHandler.Component; // eslint-disable-line\n\n// Export all symbols, for the benefit of Closure compiler.\n// No effect on uncompiled code.\ncomponentHandler['upgradeDom'] = componentHandler.upgradeDom;\ncomponentHandler['upgradeElement'] = componentHandler.upgradeElement;\ncomponentHandler['upgradeElements'] = componentHandler.upgradeElements;\ncomponentHandler['upgradeAllRegistered'] =\n    componentHandler.upgradeAllRegistered;\ncomponentHandler['registerUpgradedCallback'] =\n    componentHandler.registerUpgradedCallback;\ncomponentHandler['register'] = componentHandler.register;\ncomponentHandler['downgradeElements'] = componentHandler.downgradeElements;\nwindow.componentHandler = componentHandler;\nwindow['componentHandler'] = componentHandler;\n\nwindow.addEventListener('load', function() {\n  'use strict';\n\n  /**\n   * Performs a \"Cutting the mustard\" test. If the browser supports the features\n   * tested, adds a mdl-js class to the <html> element. It then upgrades all MDL\n   * components requiring JavaScript.\n   */\n  if (\n      'classList' in document.documentElement &&\n      'querySelector' in document &&\n      'addEventListener' in window &&\n      'forEach' in Array.prototype) {\n    document.documentElement.classList.add('mdl-js');\n    componentHandler.upgradeAllRegistered();\n  } else {\n    /**\n     * Dummy function to avoid JS errors.\n     */\n    componentHandler.upgradeElement = function() {};\n    /**\n     * Dummy function to avoid JS errors.\n     */\n    componentHandler.register = function() {};\n  }\n});\n","/**\n * @license\n * Copyright 2015 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n(function() {\n  'use strict';\n\n  /**\n   * Class constructor for Tooltip MDL component.\n   * Implements MDL component design pattern defined at:\n   * https://github.com/jasonmayes/mdl-component-design-pattern\n   *\n   * @constructor\n   * @param {HTMLElement} element The element that will be upgraded.\n   */\n  var MaterialTooltip = function MaterialTooltip(element) {\n    this.element_ = element;\n\n    // Initialize instance.\n    this.init();\n  };\n  window['MaterialTooltip'] = MaterialTooltip;\n\n  /**\n   * Store constants in one place so they can be updated easily.\n   *\n   * @enum {string | number}\n   * @private\n   */\n  MaterialTooltip.prototype.Constant_ = {\n    // None for now.\n  };\n\n  /**\n   * Store strings for class names defined by this component that are used in\n   * JavaScript. This allows us to simply change it in one place should we\n   * decide to modify at a later date.\n   *\n   * @enum {string}\n   * @private\n   */\n  MaterialTooltip.prototype.CssClasses_ = {\n    IS_ACTIVE: 'is-active',\n    BOTTOM: 'mdl-tooltip--bottom',\n    LEFT: 'mdl-tooltip--left',\n    RIGHT: 'mdl-tooltip--right',\n    TOP: 'mdl-tooltip--top'\n  };\n\n  /**\n   * Handle mouseenter for tooltip.\n   *\n   * @param {Event} event The event that fired.\n   * @private\n   */\n  MaterialTooltip.prototype.handleMouseEnter_ = function(event) {\n    var props = event.target.getBoundingClientRect();\n    var left = props.left + (props.width / 2);\n    var top = props.top + (props.height / 2);\n    var marginLeft = -1 * (this.element_.offsetWidth / 2);\n    var marginTop = -1 * (this.element_.offsetHeight / 2);\n\n    if (this.element_.classList.contains(this.CssClasses_.LEFT) || this.element_.classList.contains(this.CssClasses_.RIGHT)) {\n      left = (props.width / 2);\n      if (top + marginTop < 0) {\n        this.element_.style.top = '0';\n        this.element_.style.marginTop = '0';\n      } else {\n        this.element_.style.top = top + 'px';\n        this.element_.style.marginTop = marginTop + 'px';\n      }\n    } else {\n      if (left + marginLeft < 0) {\n        this.element_.style.left = '0';\n        this.element_.style.marginLeft = '0';\n      } else {\n        this.element_.style.left = left + 'px';\n        this.element_.style.marginLeft = marginLeft + 'px';\n      }\n    }\n\n    if (this.element_.classList.contains(this.CssClasses_.TOP)) {\n      this.element_.style.top = props.top - this.element_.offsetHeight - 10 + 'px';\n    } else if (this.element_.classList.contains(this.CssClasses_.RIGHT)) {\n      this.element_.style.left = props.left + props.width + 10 + 'px';\n    } else if (this.element_.classList.contains(this.CssClasses_.LEFT)) {\n      this.element_.style.left = props.left - this.element_.offsetWidth - 10 + 'px';\n    } else {\n      this.element_.style.top = props.top + props.height + 10 + 'px';\n    }\n\n    this.element_.classList.add(this.CssClasses_.IS_ACTIVE);\n  };\n\n  /**\n   * Hide tooltip on mouseleave or scroll\n   *\n   * @private\n   */\n  MaterialTooltip.prototype.hideTooltip_ = function() {\n    this.element_.classList.remove(this.CssClasses_.IS_ACTIVE);\n  };\n\n  /**\n   * Initialize element.\n   */\n  MaterialTooltip.prototype.init = function() {\n\n    if (this.element_) {\n      var forElId = this.element_.getAttribute('for') ||\n          this.element_.getAttribute('data-mdl-for');\n\n      if (forElId) {\n        this.forElement_ = document.getElementById(forElId);\n      }\n\n      if (this.forElement_) {\n        // It's left here because it prevents accidental text selection on Android\n        if (!this.forElement_.hasAttribute('tabindex')) {\n          this.forElement_.setAttribute('tabindex', '0');\n        }\n\n        this.boundMouseEnterHandler = this.handleMouseEnter_.bind(this);\n        this.boundMouseLeaveAndScrollHandler = this.hideTooltip_.bind(this);\n        this.forElement_.addEventListener('mouseenter', this.boundMouseEnterHandler, false);\n        this.forElement_.addEventListener('touchend', this.boundMouseEnterHandler, false);\n        this.forElement_.addEventListener('mouseleave', this.boundMouseLeaveAndScrollHandler, false);\n        window.addEventListener('scroll', this.boundMouseLeaveAndScrollHandler, true);\n        window.addEventListener('touchstart', this.boundMouseLeaveAndScrollHandler);\n      }\n    }\n  };\n\n  // The component registers itself. It can assume componentHandler is available\n  // in the global scope.\n  componentHandler.register({\n    constructor: MaterialTooltip,\n    classAsString: 'MaterialTooltip',\n    cssClass: 'mdl-tooltip'\n  });\n})();","(function() {\n  'use strict';\n\n  /**\n   * @description Clase constructora de los campos output.\n   * FieloOutput activa la conversión de los output por sus nuevos valores\n   * Implementa los patrones de diseño definidos por MDL en\n   * {@link https://github.com/jasonmayes/mdl-component-design-pattern}\n   *\n   * @version 2\n   * @author Hugo Gómez Mac Gregor <hugo.gomez@fielo.com>\n   * @author Sebastian Claros <sebastian.claros@fielo.com>\n   * @param {HTMLElement} element - Elemento que será mejorado.\n   * @constructor\n   */\n  var FieloOutput = function FieloOutput(element) {\n    this.element_ = element;\n\n    // Initialize instance.\n    this.init();\n  };\n  window.FieloOutput = FieloOutput;\n\n  /**\n   * Guarda strings para nombres de clases definidas por este componente\n   * que son usadas por JavaScript.\n   * Esto nos permite cambiarlos solo en un lugar\n   * @enum {string}\n   * @private\n   */\n  FieloOutput.prototype.CssClasses_ = {\n    // Nombre del elemento time\n    TIME: 'fielo-time'\n  };\n\n  // Private methods\n\n  /**\n   * Setea los registros por defecto\n   *\n   * @private\n   */\n  FieloOutput.prototype.setDefaults_ = function() {\n    this.config_ = {\n      locale: 'en-US'\n    };\n    this.type_ = this.element_.getAttribute('data-type');\n    this.value_ = this.element_.getAttribute('data-value');\n  };\n\n  /**\n   * Convierte el valor viejo por el nuevo\n   *\n   * @private\n   */\n  FieloOutput.prototype.convertValue_ = function() {\n    var newValue;\n    switch (this.type_) {\n      case 'date':\n      case 'datetime':\n        if (this.value_ !== '') {\n          newValue = new Date();\n          newValue.setTime(isNaN(this.value_) ?\n            Date.parse(this.value_) : this.value_);\n          this.value_ = newValue.toLocaleDateString(this.config_.locale);\n          if (this.type_ === 'datetime') {\n            this.value_ += ' ' +\n              newValue.toLocaleTimeString(this.config_.locale);\n          }\n        }\n        break;\n      case 'integer':\n        if (this.value_ !== '') {\n          newValue = Number.parseInt(this.value_, 10);\n          this.value_ = newValue.toLocaleString(this.config_.locale);\n        }\n        break;\n      case 'currency':\n        if (this.value_ !== '') {\n          newValue = parseFloat(this.value_);\n          var currencyIsoCode = this.element_\n            .getAttribute('data-currencyIsoCode');\n          this.value_ = newValue.toLocaleString(this.config_.locale,\n            {style: 'currency', currency: currencyIsoCode});\n        }\n        break;\n      case 'percent':\n        if (this.value_ !== '') {\n          newValue = parseFloat(this.value_);\n          this.value_ = newValue.toLocaleString(\n            this.config_.locale, {style: 'percent'}\n           );\n        }\n        break;\n      case 'double': case 'decimal': case 'number':\n        if (this.value_ !== '') {\n          newValue = parseFloat(this.value_);\n          this.value_ = newValue.toLocaleString(this.config_.locale);\n        }\n        break;\n      default:\n    }\n\n    if (newValue) {\n      var node;\n      switch (this.type_) {\n        case 'date':\n        case 'datetime':\n          node = this.element_.querySelector('.' + this.CssClasses_.TIME);\n          if (node) {\n            node.setAttribute('datetime', this.value_);\n            node.innerText = this.value_;\n          } else {\n            this.element_.innerText = this.value_;\n          }\n          break;\n        case 'reference':\n          node = this.element_.getElementsByTagName('a')[0];\n          if (node) {\n            this.element_.innerText = node.innerText;\n          }\n          break;\n        default:\n          this.element_.innerText = this.value_;\n      }\n    }\n  };\n\n  // Public methods\n\n  /**\n   * Inicializa el elemento\n   */\n  FieloOutput.prototype.init = function() {\n    if (this.element_) {\n      this.setDefaults_();\n      this.convertValue_();\n    }\n  };\n\n  // El componente se registra por si solo.\n  // Asume que el componentHandler esta habilitado en el scope global\n  componentHandler.register({\n    constructor: FieloOutput,\n    classAsString: 'FieloOutput',\n    cssClass: 'fielo-output',\n    widget: false\n  });\n})();\n","(function() {\n  'use strict';\n\n  /**\n   * @description Clase constructora para los Spinners.\n   * FieloSpinner muestra / oculta el spinner\n   * Implementa los patrones de diseño definidos por MDL en\n   * {@link https://github.com/jasonmayes/mdl-component-design-pattern}\n   *\n   * @version 2.0\n   * @author Hugo Gómez Mac Gregor <hugo.gomez@fielo.com>\n   * @param {HTMLElement} element - Elemento que será mejorado.\n   * @constructor\n   */\n  var FieloSpinner = function FieloSpinner(element) {\n    this.element_ = element;\n\n    // Initialize instance.\n    this.init();\n  };\n  window.FieloSpinner = FieloSpinner;\n\n  /**\n   * Guarda strings para nombres de clases definidas por este componente\n   * que son usadas por JavaScript.\n   * Esto nos permite cambiarlos solo en un lugar\n   * @enum {string}\n   * @private\n   */\n  FieloSpinner.prototype.CssClasses_ = {\n    /** Nombre para ocultar el elemento */\n    HIDDEN: 'hidden'\n  };\n\n  /**\n   * Muestra el spinner\n   *\n   * @public\n   */\n  FieloSpinner.prototype.show = function() {\n    this.element_.classList.remove(this.CssClasses_.HIDDEN);\n  };\n\n  /**\n   * Oculta el spinner\n   *\n   * @public\n   */\n  FieloSpinner.prototype.hide = function() {\n    this.element_.classList.add(this.CssClasses_.HIDDEN);\n  };\n\n  /**\n   * Inicializa el elemento\n   */\n  FieloSpinner.prototype.init = function() {\n    if (this.element_) {\n      this.element_.addEventListener('click', function(event) {\n        event.preventDefault();\n        event.stopPropagation();\n      });\n\n      // Disponibiliza el spinner en fieloUtils\n      fieloUtils.spinner = this.element_;\n    }\n  };\n\n  // El componente se registra por si solo.\n  // Asume que el componentHandler esta habilitado en el scope global\n  componentHandler.register({\n    constructor: FieloSpinner,\n    classAsString: 'FieloSpinner',\n    cssClass: 'fielo-spinner',\n    widget: true\n  });\n})();\n\n","(function() {\n  'use strict';\n\n  /**\n   * @description Clase constructora de los Mensajes.\n   * FieloMessages activa las funcionalidades para los mensajes de alerta\n   * Implementa los patrones de diseño definidos por MDL en\n   * {@link https://github.com/jasonmayes/mdl-component-design-pattern}\n   *\n   * @version 2\n   * @author Hugo Gómez Mac Gregor <hugo.gomez@fielo.com>\n   * @author Sebastian Claros <sebastian.claros@fielo.com>\n   * @param {HTMLElement} element - Elemento que será mejorado.\n   * @constructor\n   */\n  var FieloMessage = function FieloMessage(element) {\n    this.element_ = element;\n\n    // Initialize instance.\n    this.init();\n  };\n  window.FieloMessage = FieloMessage;\n\n  // Properties\n\n  /**\n   * Guarda las constantes en un lugar para que sean facilmente actualizadas\n   * @enum {string | number}\n   * @private\n   */\n  FieloMessage.prototype.Constant_ = {\n    TYPE_PREFIX: 'TYPE_',\n    TYPE_DEFAULT: 'INFO',\n    REDIRECT_WAIT_DEFAULT: 4\n  };\n\n  /**\n   * Guarda strings para nombres de clases definidas por este componente que son usadas por JavaScript.\n   * Esto nos permite cambiarlos solo en un lugar\n   * @enum {string}\n   * @private\n   */\n  FieloMessage.prototype.CssClasses_ = {\n    /** Elemento que contiene los mensajes de error */\n    MESSAGE: 'fielo-message__text',\n    /** Boton que contiene el contador */\n    COUNTER: 'fielo-message__counter',\n    /** Nombre para ocultar el elemento */\n    HIDDEN: 'hidden',\n    /** Nombre para mostrar animando */\n    FADE_IN: 'fielo-message--fade-in',\n    /** Nombre para ocultar animando */\n    FADE_OUT: 'fielo-message--fade-out',\n    /** Tipos de errores */\n    TYPE_CONFIRM: 'fielo-message--is-confirm',\n    TYPE_INFO: 'fielo-message--is-info',\n    TYPE_ERROR: 'fielo-message--is-error',\n    TYPE_FATAL: 'fielo-message--is-fatal',\n    TYPE_WARNING: 'fielo-message--is-warning'\n  };\n\n  // Private methods\n\n  /**\n   * Setea los registros por defecto\n   *\n   * @private\n   */\n  FieloMessage.prototype.setDefaults_ = function() {\n    this.registerTypes_();\n\n    this.redirect_ = {};\n    this.redirect_.active = false;\n    // ['' | '#' | string ]\n    this.redirect_.url = '';\n    // redirect disabled\n    this.redirect_.wait = 0;\n\n    this.isAnimated_ = true;\n  };\n\n  /**\n   * Registra los listeners de las animaciones\n   *\n   * @private\n   */\n  FieloMessage.prototype.setAnimationListeners_ = function() {\n    this.element_.addEventListener(\n      'animationstart', this.animationStarted.bind(this)\n    );\n    this.element_.addEventListener(\n      'animationiteration', this.animationNewIteration\n    .bind(this));\n    this.element_.addEventListener(\n      'animationend', this.animationEnded.bind(this)\n    );\n  };\n\n  /**\n   * Registra los tipos de mensajes\n   *\n   * @private\n   */\n  FieloMessage.prototype.registerTypes_ = function() {\n    this.selectedType_ = '';\n    this.types_ = [];\n    for (var property in this.CssClasses_) {\n      if (property.indexOf(this.Constant_.TYPE_PREFIX) === 0) {\n        this.types_.push(property);\n      }\n    }\n  };\n\n  /**\n   * Limpia el tipo del mensaje\n   *\n   * @private\n   */\n  FieloMessage.prototype.clearType_ = function() {\n    // El remove esta separado por clase debido a compatibilidad con IE 11\n    this.types_.forEach(function(typeValue) {\n      this.element_.classList.remove(this.CssClasses_[typeValue]);\n    }, this);\n    this.selectedType_ = '';\n  };\n\n  /**\n   * Crea el elemento contador\n   *\n   * @private\n   */\n\n  FieloMessage.prototype.createCounterButton_ = function() {\n    var counter = document.createElement('span');\n    counter.classList.add(this.CssClasses_.COUNTER);\n    this.element_.appendChild(counter);\n\n    this.counter_ = this.element_.querySelector('.' + this.CssClasses_.COUNTER);\n  };\n\n  /**\n   * Elimina el elemento contador\n   *\n   * @private\n   */\n\n  FieloMessage.prototype.deleteCounterButton_ = function() {\n    this.counter_.remove();\n  };\n\n  /**\n   * Corre el contador\n   * @param {number} [timeLeft] Tiempo faltante para terminar\n   * @private\n   */\n  FieloMessage.prototype.runTimer_ = function() {\n    setTimeout(function() {\n      if (this.redirect_.wait >= 0) {\n        // Muestro el  en el html\n        this.counter_.innerHTML = this.redirect_.wait;\n        this.redirect_.wait--;\n        this.runTimer_();\n      } else {\n        this.hide();\n        this.doRedirect();\n      }\n    }\n    .bind(this), 1000);\n  };\n\n  /**\n   * Agrega el listener al click\n   * @private\n   */\n  FieloMessage.prototype.clickEventListener_ = function() {\n    this.hide();\n  };\n\n  // Public methods\n\n  /**\n   * Setea el mensaje para animar\n   * @param {bool} boolean - Define se anima o no el mensaje\n   * @public\n   */\n  FieloMessage.prototype.animate = function(boolean) {\n    this.isAnimated_ = boolean;\n  };\n\n  /**\n   * Agrega mensaje de error\n   *\n   * @param {array | string} messages - Lista de mensajes a agregar\n   * @public\n   */\n  FieloMessage.prototype.addMessages = function(messages) {\n    if (typeof messages === 'string') {\n      messages = messages.split(messages + 'toArray');\n    }\n\n    for (var l = messages.length, i = 0; i < l; i++) {\n      var p = document.createElement('p');\n      p.classList.add(this.CssClasses_.MESSAGE);\n      p.innerText = messages[i];\n      this.element_.appendChild(p);\n    }\n  };\n\n  /**\n   * Guarda el tipo del mensaje\n   *\n   * @param {string} type - Tipo de alerta\n   * @public\n   */\n  FieloMessage.prototype.setType = function(type) {\n    this.clearType_();\n    type = type || '';\n    this.selectedType_ = type.toUpperCase();\n\n    if (this.types_.indexOf(\n      this.Constant_.TYPE_PREFIX + this.selectedType_\n      ) !== -1 && this.selectedType_ !== ''\n    ) {\n      // type existente seleccionada por usuario\n      this.element_.classList.add(\n      this.CssClasses_[this.Constant_.TYPE_PREFIX + this.selectedType_]\n      );\n    } else {\n      // type por default\n      this.selectedType_ = this.Constant_.TYPE_DEFAULT;\n      this.element_.classList.add(\n      this.Constant_.TYPE_PREFIX + this.Constant_.TYPE_DEFAULT.toUpperCase()\n      );\n    }\n  };\n\n  /**\n   * Configura la redirección\n   *\n   * @param {string} url - url a redireccionar\n   * @param {number} seconds - segundos a esperar para ser redirecionado\n   * @public\n   */\n  FieloMessage.prototype.setRedirect = function(url, seconds) {\n    this.redirect_.url = url || this.redirect_.url;\n    this.redirect_.wait = seconds || this.Constant_.REDIRECT_WAIT_DEFAULT;\n\n    // Condiciones para evitar redirect\n    if (\n      this.redirect_.url !== '' &&\n      this.redirect_.wait > 0\n    ) {\n      this.redirect_.active = true;\n    }\n  };\n\n  /**\n   * Redirige el sitio a otra url\n   *\n   * @public\n   */\n  FieloMessage.prototype.doRedirect = function() {\n    if (this.redirect_.active) {\n      window.location.href = this.redirect_.url;\n    }\n  };\n\n  /**\n   * Borra los mensajes y el tipo de mensaje\n   *\n   * @public\n   */\n  FieloMessage.prototype.clear = function() {\n    this.element_.innerHTML = '';\n    this.clearType_();\n  };\n\n  /**\n   * Muestra el mensaje\n   *\n   * @public\n   */\n  FieloMessage.prototype.show = function() {\n    // Verifica el type\n    if (this.selectedType_ === '') {\n      this.setType(this.Constant_.TYPE_DEFAULT);\n    }\n\n    // Corro el contador\n    if (this.redirect_.active) {\n      this.createCounterButton_();\n      this.runTimer_();\n    }\n\n    // Mostrar el mensaje\n    if (this.isAnimated_) {\n      this.element_.classList.add(this.CssClasses_.FADE_IN);\n    }\n    this.element_.classList.remove(this.CssClasses_.FADE_OUT);\n    this.element_.classList.remove(this.CssClasses_.HIDDEN);\n  };\n\n  /**\n   * Oculta el mensaje\n   *\n   * @public\n   */\n  FieloMessage.prototype.hide = function() {\n    // Borro el boton\n    if (this.redirect_.active) {\n      this.deleteCounterButton_();\n    }\n\n    // Ocultar el mensaje\n    if (this.isAnimated_) {\n      this.element_.classList.remove(this.CssClasses_.FADE_IN);\n      this.element_.classList.add(this.CssClasses_.FADE_OUT);\n    } else {\n      this.element_.classList.add(this.CssClasses_.HIDDEN);\n    }\n  };\n\n  // Public methods\n\n  /**\n   * Método que se ejecuta cuando arranca la animación\n   *\n   * @public\n   */\n  FieloMessage.prototype.animationStarted = function() {\n  };\n\n  /**\n   * Método que se ejecuta cuando arranca una iteración\n   *\n   * @public\n   */\n  FieloMessage.prototype.animationNewIteration = function() {\n  };\n\n  /**\n   * Método que se ejecuta cuando arranca termina una animación\n   *\n   * @param {event} e - Evento de animación\n   * @public\n   */\n  FieloMessage.prototype.animationEnded = function(e) {\n    switch (e.animationName) {\n      case 'message_fadeout':\n        this.element_.classList.add(this.CssClasses_.HIDDEN);\n        break;\n      default:\n        break;\n    }\n  };\n\n  /**\n   * Inicializa el elemento\n   */\n  FieloMessage.prototype.init = function() {\n    if (this.element_) {\n      this.setDefaults_();\n      this.setAnimationListeners_();\n      this.element_.addEventListener(\n        'click',\n        this.clickEventListener_.bind(this)\n      );\n      fieloUtils.message = this.element_;\n    }\n  };\n\n  // El componente se registra por si solo.\n  // Asume que el componentHandler esta habilitado en el scope global\n  componentHandler.register({\n    constructor: FieloMessage,\n    classAsString: 'FieloMessage',\n    cssClass: 'fielo-message',\n    widget: true\n  });\n})();\n","(function() {\n  'use strict';\n\n  /**\n   * @description Clase constructora del modal.\n   * FieloModal activa las funcionalidades para el modal\n   * Implementa los patrones de diseño definidos por MDL en\n   * {@link https://github.com/jasonmayes/mdl-component-design-pattern}\n   *\n   * @version 2\n   * @author Hugo Gómez Mac Gregor <hugo.gomez@fielo.com>\n   * @param {HTMLElement} element - Elemento que será mejorado.\n   * @constructor\n   */\n  var FieloModal = function FieloModal(element) {\n    this.element_ = element;\n\n    // Initialize instance.\n    this.init();\n  };\n  window.FieloModal = FieloModal;\n\n  // Properties\n\n  /**\n   * Guarda strings para nombres de clases definidas por este componente\n   * que son usadas por JavaScript.\n   *\n   * Esto nos permite cambiarlos solo en un lugar\n   *\n   * @enum {string}\n   * @private\n   */\n  FieloModal.prototype.CssClasses_ = {\n    // Nombre para ocultar el elemento\n    HIDDEN: 'hidden',\n    // Nombre del elemento HTML para cerrar\n    CLOSE: 'fielo-modal__close',\n    // Elemento HTML para el cuerpo del modal\n    BODY: 'fielo-modal__body',\n    // Elemento HTML para el contenido del modal\n    BODY_CONTAINER: 'fielo-modal__body-container',\n    // Nombre para mostrar animando\n    FADE_IN: 'fielo-modal--fade-in',\n    // Nombre para ocultar animando\n    FADE_OUT: 'fielo-modal--fade-out'\n  };\n\n/**\n   * Guarda las constantes en un lugar para que sean facilmente actualizadas\n   * @enum {string | number}\n   * @private\n   */\n  FieloModal.prototype.Constant_ = {\n    CALLED_BY: 'data-called-by'\n  };\n  // Private methods\n\n  /**\n   * Setea los registros por defecto\n   *\n   * @private\n   */\n  FieloModal.prototype.setDefaults_ = function() {\n    this.isAnimated_ = true;\n    this.closeBtn_ = this.element_.querySelector('.' + this.CssClasses_.CLOSE);\n    this.body_ = this.element_.querySelector('.' + this.CssClasses_.BODY);\n    this.bodyContainer_ =\n      this.body_.querySelector('.' + this.CssClasses_.BODY_CONTAINER);\n  };\n\n  /**\n   * Evento para cerrar el modal\n   *\n   * @private\n   */\n  FieloModal.prototype.closeEventListener_ = function() {\n    event.stopPropagation();\n    this.hide();\n  };\n\n  /**\n   * Resgistra los elementos que cierran el modal\n   *\n   * @private\n   */\n  FieloModal.prototype.registerCloseElements_ = function() {\n    this.element_.addEventListener(\n      'click',\n      this.closeEventListener_.bind(this)\n    );\n    this.closeBtn_.addEventListener(\n      'click',\n      this.closeEventListener_.bind(this)\n    );\n  };\n\n  /**\n   * Evento para evitar cerrar el modal\n   *\n   * @private\n   */\n  FieloModal.prototype.noClosingEventListener_ = function() {\n    event.stopPropagation();\n  };\n\n  /**\n   * Resgistra los elementos que no pueden cerrar el modal\n   *\n   * @private\n   */\n  FieloModal.prototype.registerNoClosingElements_ = function() {\n    this.body_.addEventListener(\n      'click',\n      this.noClosingEventListener_.bind(this)\n    );\n  };\n\n  /**\n   * Registra los listeners de las animaciones\n   *\n   * @private\n   */\n  FieloModal.prototype.setAnimationListeners_ = function() {\n    this.element_.addEventListener(\n      'animationstart', this.animationStarted.bind(this)\n    );\n    this.element_.addEventListener(\n      'animationiteration', this.animationNewIteration\n    .bind(this));\n    this.element_.addEventListener(\n      'animationend', this.animationEnded.bind(this)\n    );\n  };\n\n  // Public methods\n\n  /**\n   * Método que se ejecuta cuando arranca la animación\n   *\n   * @public\n   */\n  FieloModal.prototype.animationStarted = function() {\n  };\n\n  /**\n   * Método que se ejecuta cuando arranca una iteración\n   *\n   * @public\n   */\n  FieloModal.prototype.animationNewIteration = function() {\n  };\n\n  /**\n   * Método que se ejecuta cuando arranca termina una animación\n   *\n   * @param {event} e - Evento de animación\n   * @public\n   */\n  FieloModal.prototype.animationEnded = function(e) {\n    switch (e.animationName) {\n      case 'modal_fadein':\n        this.element_.classList.remove(this.CssClasses_.FADE_IN);\n        break;\n      case 'modal_fadeout':\n        this.element_.classList.add(this.CssClasses_.HIDDEN);\n        this.element_.classList.remove(this.CssClasses_.FADE_OUT);\n        break;\n      default:\n        break;\n    }\n  };\n\n  /**\n   * Setea si el modal se anima o no\n   * @param {bool} boolean - Define se anima o no el mensaje\n   * @public\n   */\n  FieloModal.prototype.animate = function(boolean) {\n    this.isAnimated_ = boolean;\n  };\n\n  /**\n   * Abre el modal\n   * @public\n   */\n  FieloModal.prototype.show = function() {\n    if (this.isAnimated_) {\n      this.element_.classList.add(this.CssClasses_.FADE_IN);\n    }\n    this.element_.classList.remove(this.CssClasses_.HIDDEN);\n  };\n\n  /**\n   * Oculta el modal\n   * @public\n   */\n  FieloModal.prototype.hide = function() {\n    // Ocultar el mensaje\n    if (this.isAnimated_) {\n      this.element_.classList.add(this.CssClasses_.FADE_OUT);\n    } else {\n      this.element_.classList.add(this.CssClasses_.HIDDEN);\n    }\n  };\n\n  /**\n   * Setea el label del elemento Close\n   *\n   * @param {HTMLelement | string} label - Label del boton close\n   * @public\n   */\n  FieloModal.prototype.setCloseLabel = function(label) {\n    label = label || fieloUtils.site.FieloSite.getLabel('close');\n    // Reset label\n    this.closeBtn_.innerHTML = '';\n    // Set label\n    if (typeof label === 'string') {\n      this.closeBtn_.innerHTML = label;\n    } else {\n      this.closeBtn_.appendChild(label);\n    }\n  };\n\n  /**\n   * Setea el contenido del modal\n   *\n   * @param {HTMLelement | string} content - Label del boton close\n   * @public\n   */\n  FieloModal.prototype.setContent = function(content) {\n    content = content || '';\n    // Reset content\n    this.bodyContainer_.innerHTML = '';\n\n    // Set content\n    if (typeof content === 'string') {\n      this.bodyContainer_.innerHTML = content;\n    } else {\n      this.bodyContainer_.appendChild(content);\n    }\n  };\n\n/**\n   * Setea la propiedad data-called-by\n   *\n   * @param {HTMLelement | string} calledBy - referencia de quien lo llamo\n   * @public\n   */\n  FieloModal.prototype.setCalledBy = function(calledBy) {\n    calledBy = calledBy || '';\n    this.element_.setAttribute(this.Constant_.CALLED_BY, calledBy);\n  };\n\n  /**\n   * Inicializa el elemento\n   */\n  FieloModal.prototype.init = function() {\n    if (this.element_) {\n      this.setDefaults_();\n      this.registerCloseElements_();\n      this.registerNoClosingElements_();\n      this.setCloseLabel();\n      this.setAnimationListeners_();\n\n    // Disponibiliza el modal en fieloUtils\n      fieloUtils.modal = this.element_;\n    }\n  };\n\n  // El componente se registra por si solo.\n  // Asume que el componentHandler esta habilitado en el scope global\n  componentHandler.register({\n    constructor: FieloModal,\n    classAsString: 'FieloModal',\n    cssClass: 'fielo-modal',\n    widget: true\n  });\n})();\n","(function() {\n  'use strict';\n\n  /**\n   * @description Clase constructora del Footer.\n   * FieloFooter se encarga de actualizar la altura a la cual empuja el footer\n   * Implementa los patrones de diseño definidos por MDL en\n   * {@link https://github.com/jasonmayes/mdl-component-design-pattern}\n   *\n   * @version 2\n   * @author Hugo Gómez Mac Gregor <hugo.gomez@fielo.com>\n   * @author Sebastian Claros <sebastian.claros@fielo.com>\n   * @param {HTMLElement} element - Elemento que será mejorado.\n   * @constructor\n   */\n  var FieloFooter = function FieloFooter(element) {\n    this.element_ = element;\n\n    // Initialize instance.\n    this.init();\n  };\n  window.FieloFooter = FieloFooter;\n\n  // Properties\n\n  /**\n   * Guarda las constantes en un lugar para que sean facilmente actualizadas\n   * @enum {string | number}\n   * @private\n   */\n  FieloFooter.prototype.Constant_ = {};\n\n  /**\n   * Guarda strings para nombres de clases definidas por este componente que son usadas por JavaScript.\n   * Esto nos permite cambiarlos solo en un lugar\n   * @enum {string}\n   * @private\n   */\n  FieloFooter.prototype.CssClasses_ = {\n    /** Elemento que empuja el footer */\n    PUSHER: 'fielo-footer--is-pushing'\n  };\n\n  // Private methods\n\n  /**\n   * Setea los registros por defecto\n   *\n   * @private\n   */\n  FieloFooter.prototype.setDefaults_ = function() {\n    this.pusher_ = document.querySelector('.' + this.CssClasses_.PUSHER);\n  };\n\n  /**\n   * Registra los listeners\n   *\n   * @private\n   */\n  FieloFooter.prototype.setListeners_ = function() {\n    window.addEventListener('optimizedResize', this.resize.bind(this));\n  };\n\n  /**\n   * Redimensiona el tamaño del footer\n   *\n   * @private\n   */\n\n  FieloFooter.prototype.resize = function() {\n    this.pusher_.setAttribute(\n      'style',\n      'height:' + this.element_.offsetHeight + 'px');\n  };\n\n  /**\n   * Inicializa el elemento\n   */\n  FieloFooter.prototype.init = function() {\n    if (this.element_) {\n      this.setDefaults_();\n      this.setListeners_();\n      this.resize();\n    }\n  };\n\n  // El componente se registra por si solo.\n  // Asume que el componentHandler esta habilitado en el scope global\n  componentHandler.register({\n    constructor: FieloFooter,\n    classAsString: 'FieloFooter',\n    cssClass: 'fielo-footer',\n    widget: false\n  });\n})();\n","(function() {\n  'use strict';\n\n  /**\n   * @description Clase constructora del Slider\n   * FieloSlider activa las funcionalidades para el slider\n   * Implementa los patrones de diseño definidos por MDL en\n   * {@link https://github.com/jasonmayes/mdl-component-design-pattern}\n   *\n   * @version 2\n   * @author Hugo Gómez Mac Gregor <hugo.gomez@fielo.com>\n   * @param {HTMLElement} element - Elemento que será mejorado.\n   * @constructor\n   */\n  var FieloSlider = function FieloSlider(element) {\n    this.element_ = element;\n\n    // Initialize instance.\n    this.init();\n  };\n  window.FieloSlider = FieloSlider;\n\n  // Properties\n\n  /**\n   * Guarda strings para nombres de clases definidas por este componente\n   * que son usadas por JavaScript.\n   * Esto nos permite cambiarlos solo en un lugar\n   * @enum {string}\n   * @private\n   */\n  FieloSlider.prototype.CssClasses_ = {\n    // Nombre para activar la animacion\n    SLIDING: 'fielo-slider__container--is-sliding',\n    // Flecha anterior\n    ARROW_PREVIOUS: 'fielo-slider__arrow--is-previous',\n    // Flecha siguiente\n    ARROW_NEXT: 'fielo-slider__arrow--is-next',\n    // elemento que contiene las slides\n    CONTAINER: 'fielo-slider__container',\n    // elemento que representa un slide\n    SLIDES: 'fielo-slider__slide'\n  };\n\n  /**\n   * Setea estilos en el atributo styles\n   *\n   * @param {HTMLelement} element - element al cual aplicar los estilos\n   * @param {object} styles - reglas que se van a aplicar\n   * @private\n   */\n  FieloSlider.prototype.setStyles_ = function(element, styles) {\n    // generar descriptor de reglas\n    var concatenatedStyles = '';\n    for (var property in styles) {\n      if ({}.hasOwnProperty.call(styles, property)) {\n        concatenatedStyles += styles[property];\n      }\n    }\n    element.setAttribute('style', concatenatedStyles);\n  };\n\n  // Private methods\n\n  /**\n   * Setea los registros por defecto\n   *\n   * @private\n   */\n  FieloSlider.prototype.setDefaults_ = function() {\n    // Slide que se está mostrando\n    this.currentSlide_ = 1;\n    // Contenedor de Slides\n    this.container_ =\n      this.element_.querySelector('.' + this.CssClasses_.CONTAINER);\n    this.slides_ =\n    // Slides existentes\n      this.container_.querySelectorAll('.' + this.CssClasses_.SLIDES);\n    // Cantidad de slides\n    this.quantity_ = this.slides_.length;\n    // Ancho del slider\n    this.width_ = this.element_.offsetWidth;\n    // flechas\n    this.arrow_ = {};\n    this.arrow_.previous =\n      this.element_.querySelector('.' + this.CssClasses_.ARROW_PREVIOUS);\n    this.arrow_.next =\n      this.element_.querySelector('.' + this.CssClasses_.ARROW_NEXT);\n    this.setKeyframeRule_();\n    // Objeto con los estilos actualizados\n    this.containerStyles_ = {};\n    // Estado de reproducción\n    this.play_ = true;\n    // Segundos a esperar por slide\n    this.delay_ = 3;\n  };\n\n  /**\n   * Registra la regla keyframe de css para animación\n   *\n   * @private\n   */\n  FieloSlider.prototype.setKeyframeRule_ = function() {\n    this.keyframes_ = [];\n    [].forEach.call(document.styleSheets, function(sheet) {\n      if (sheet.cssRules !== null) {\n        [].forEach.call(sheet.cssRules, function(rule) {\n          if (rule.type === 7 && rule.name === 'slide') {\n            this.keyframes_.push(rule);\n          }\n        }, this);\n      }\n    }, this);\n  };\n\n  /**\n   * Registra los listeners de las animaciones\n   *\n   * @private\n   */\n  FieloSlider.prototype.setAnimationListeners_ = function() {\n    this.element_.addEventListener(\n      'animationstart', this.animationStarted.bind(this)\n    );\n    this.element_.addEventListener(\n      'animationiteration', this.animationNewIteration\n    .bind(this));\n    this.element_.addEventListener(\n      'animationend', this.animationEnded.bind(this)\n    );\n  };\n\n  /**\n   * Setea / Actualiza los keyframes\n   *\n   * @param {string} name - Nombre de la animación\n   * @param {string} properties - propiedades de la animación\n   * @private\n   */\n  FieloSlider.prototype.setKeyframe_ = function(name) {\n    this.keyframes_.forEach(function(rule) {\n      if (rule.name === name) {\n        rule.cssRules[0].style.left =\n          '-' + (this.currentSlide_ - 1) * 100 + '%';\n      }\n    }.bind(this));\n  };\n\n  /**\n   * Setea el ancho del container\n   *\n   * @private\n   */\n  FieloSlider.prototype.setContainerWidth_ = function() {\n    this.containerStyles_.width = 'width:' + (this.quantity_ * 100) + '%;';\n    this.setStyles_(this.container_, this.containerStyles_);\n  };\n\n  /**\n   * Setea la posición del container\n   *\n   * @private\n   */\n  FieloSlider.prototype.saveCurrentPosition_ = function() {\n    this.containerStyles_.left =\n      'left:-' + ((this.currentSlide_ - 1) * 100) + '%;';\n    this.setStyles_(this.container_, this.containerStyles_);\n  };\n\n  /**\n   * Setea las propiedades de cada slide\n   *\n   * @private\n   */\n  FieloSlider.prototype.setSlidesProperties_ = function() {\n    [].forEach.call(this.slides_, function(slide) {\n      this.setSlideLinks_(slide);\n      this.setSlidesWidth_(slide);\n    }, this);\n  };\n\n  /**\n   * Setea el ancho de los slides\n   * @param {HTMLelement} slide - slide a la cual se le setea el ancho\n   * @private\n   */\n  FieloSlider.prototype.setSlidesWidth_ = function(slide) {\n    slide.setAttribute('style', 'width: calc(100%/' + this.quantity_ + ');');\n  };\n\n  /**\n   * Registra los links a los slides\n   * @param {HTMLelement} slide - slide a la cual se le setea un link\n   * @private\n   */\n  FieloSlider.prototype.setSlideLinks_ = function(slide) {\n    var url = slide.getAttribute('data-link');\n    if (url !== '') {\n      slide.addEventListener('click', function() {\n        window.location = url;\n      });\n    }\n  };\n\n  /**\n   * Registra la navegación del slider\n   * @private\n   */\n  FieloSlider.prototype.registerNavigation_ = function() {\n    this.arrow_.previous.addEventListener('click', this.goPrevious.bind(this));\n    this.arrow_.next.addEventListener('click', this.goNext.bind(this));\n  };\n\n  // Public methods\n\n  /**\n   * Método que se ejecuta cuando arranca la animación\n   *\n   * @public\n   */\n  FieloSlider.prototype.animationStarted = function() {\n  };\n\n  /**\n   * Método que se ejecuta cuando arranca una iteración\n   *\n   * @public\n   */\n  FieloSlider.prototype.animationNewIteration = function() {\n  };\n\n  /**\n   * Método que se ejecuta cuando arranca termina una animación\n   *\n   * @param {event} e - Evento de animación\n   * @public\n   */\n  FieloSlider.prototype.animationEnded = function(e) {\n    this.saveCurrentPosition_();\n    switch (e.animationName) {\n      case 'slide':\n        this.container_.classList.remove(this.CssClasses_.SLIDING);\n        break;\n      default:\n        break;\n    }\n    if (this.play_) {\n      setTimeout(this.goToSlide.bind(this), this.delay_ * 1000);\n    }\n  };\n\n  /**\n   * Muestra el slide anterior\n   *\n   * @public\n   */\n  FieloSlider.prototype.goPrevious = function() {\n    if (this.currentSlide_ > 1) {\n      this.goToSlide(this.currentSlide_ - 1);\n    }\n  };\n\n  /**\n   * Muestra el slide siguiente\n   *\n   * @public\n   */\n  FieloSlider.prototype.goNext = function() {\n    if (this.currentSlide_ < this.quantity_) {\n      this.goToSlide(this.currentSlide_ + 1);\n    }\n  };\n\n  /**\n   * Setea el play\n   *\n   * @param {bool} boolean - Verdadero para play\n   * @public\n   */\n  FieloSlider.prototype.setAutoPlay = function(boolean) {\n    this.play_ = boolean;\n    if (this.play_) {\n      this.goToSlide();\n    }\n  };\n\n  /**\n   * Va a la slide correspondiente\n   *\n   * @param {number} slide - slide que se quiere mostrar\n   * @public\n   */\n  FieloSlider.prototype.goToSlide = function(slide) {\n    if (slide) {\n      this.currentSlide_ = slide;\n    } else if (this.currentSlide_ < this.quantity_) {\n      this.currentSlide_ ++;\n    } else {\n      this.currentSlide_ = 1;\n    }\n\n    this.setKeyframe_('slide');\n    this.container_.classList.add(this.CssClasses_.SLIDING);\n  };\n\n  /**\n   * Inicializa el elemento\n   *\n   * @public\n   */\n  FieloSlider.prototype.init = function() {\n    if (this.element_) {\n      this.setDefaults_();\n      this.setAnimationListeners_();\n      this.setContainerWidth_();\n      this.setSlidesProperties_();\n      this.registerNavigation_();\n      this.saveCurrentPosition_();\n    }\n  };\n\n  // El componente se registra por si solo.\n  // Asume que el componentHandler esta habilitado en el scope global\n  componentHandler.register({\n    constructor: FieloSlider,\n    classAsString: 'FieloSlider',\n    cssClass: 'fielo-slider',\n    widget: true\n  });\n})();\n","(function() {\n  'use strict';\n\n  /**\n   * @description Clase constructora de los recordset.\n   * FieloRecordSet hace el upgrade del recordset\n   * Implementa los patrones de diseño definidos por MDL en\n   * {@link https://github.com/jasonmayes/mdl-component-design-pattern}\n   *\n   * @version 2\n   * @author Hugo Gómez Mac Gregor <hugo.gomez@fielo.com>\n   * @contributor Diego Amarante <diego.amarante@fielo.com>\n   * @param {HTMLElement} element - Elemento que será mejorado.\n   * @constructor\n   */\n  var FieloRecordSet = function FieloRecordSet(element) {\n    this.element_ = element;\n\n    //  Initialize instance.\n    this.init();\n  };\n  window.FieloRecordSet = FieloRecordSet;\n\n  /**\n   * Guarda las constantes en un lugar para que sean facilmente actualizadas\n   * @enum {string | number}\n   * @private\n   */\n  FieloRecordSet.prototype.Constant_ = {\n    // Atributos data\n    DATA_VALUE: 'data-value',\n    DATA_LAYOUT: 'data-layout',\n    DATA_UPGRADED: 'data-upgraded',\n    DATA_ATTRIBUTE_REPLACE: 'data-attribute-replace',\n    DATA_DETAIL_PARAMETER: 'data-detail-parameter',\n    DATA_OBJECT_PROPERTY: 'data-object-property',\n    // Módulos\n    MODULE_OUTPUT: 'FieloOutput',\n    MODULE_RECORD: 'FieloRecord',\n    MODULE_RECORD_SET: 'FieloRecordSet'\n  };\n\n  /**\n   * Guarda strings para nombres de clases definidas por este componente\n   * que son usadas por JavaScript.\n   * Esto nos permite cambiarlos solo en un lugar\n   * @enum {string}\n   * @private\n   */\n  FieloRecordSet.prototype.CssClasses_ = {\n    //  Elementos del recordset\n    DATA: 'fielo-record-set__data',\n    DATA_DISABLED: 'fielo-record-set__data--disabled',\n    TEMPLATE: 'fielo-record-set__template',\n    // Elementos del record\n    RECORD: 'fielo-record',\n    FIELD_IS: 'fielo-field--is-',\n    FIELD_IS_DETAIL: 'fielo-field--is-detail',\n    OUTPUT: 'fielo-output',\n    LINK_TO_DETAIL: 'fielo-link__to-detail',\n    FIELD_VALUE: 'fielo-field__value'\n  };\n\n  //  Private methods\n\n  /**\n   * Setea los registros por defecto\n   *\n   * @private\n   */\n  FieloRecordSet.prototype.setDefaults_ = function() {\n    // Registro el NS\n    this.ns_ = fieloUtils.site.FieloSite.ns;\n\n    //  Guardo el layout\n    this.layout_ = this.element_.getAttribute(this.Constant_.DATA_LAYOUT);\n\n    //  guardo el contenedor de todos los registros\n    this.data_ = this.element_.querySelector('.' + this.CssClasses_.DATA);\n\n    //  Inicializo el objeto records\n    this.setRecordsObject_();\n\n    // Si tengo records continuo con el set Defaults\n    if (this.records_.inTemplate > 0) {\n      this.setRecordSetTemplate_();\n      this.setRecordTemplate_();\n\n      this.onlyOneTemplate_ =\n        this.recordSetTemplate_.isEqualNode(this.recordTemplate_);\n    }\n  };\n\n  /**\n   * Setea el template del recordSet\n   *\n   * @private\n   */\n  FieloRecordSet.prototype.setRecordsObject_ = function() {\n    this.records_ = {};\n    //  Registra la cantidad de records en un template\n    var tempElement =\n      this.data_.querySelector('.' + this.CssClasses_.TEMPLATE);\n    if (tempElement) {\n      this.records_.inTemplate = tempElement.children.length || 0;\n    }\n\n    //  Guardo cantidad de records en la página\n    this.records_.inPage =\n      this.data_.querySelectorAll('.' + this.CssClasses_.RECORD).length || 0;\n\n    // Interfaz de propiedades\n    this.records_.fields = [];\n\n    tempElement = null;\n  };\n\n  /**\n   * Setea el template del recordSet\n   *\n   * @private\n   */\n  FieloRecordSet.prototype.setRecordSetTemplate_ = function() {\n    //  guardo un template\n    this.recordSetTemplate_ =\n      this.data_.querySelector('.' + this.CssClasses_.TEMPLATE)\n      .cloneNode(true);\n\n    //  Borro el atributo del componentHandler\n    this.recordSetTemplate_.removeAttribute(this.Constant_.DATA_UPGRADED);\n  };\n\n  /**\n   * Setea los registros por defecto\n   *\n   * @private\n   */\n  FieloRecordSet.prototype.setRecordTemplate_ = function() {\n    // Seteo el record Template\n    this.recordTemplate_ =\n      this.data_.querySelector('.' + this.CssClasses_.RECORD).cloneNode(true);\n\n    //  Borro el atributo del componentHandler\n    this.recordTemplate_.removeAttribute(this.Constant_.DATA_UPGRADED);\n  };\n\n  /**\n   * Borra los hijos de data\n   *\n   * @private\n   */\n  FieloRecordSet.prototype.cleanDataChilds_ = function() {\n    // limpio los field de tipo detail y los record de tipo template\n    [].forEach.call(this.data_.querySelectorAll(\n      '.' + this.CssClasses_.FIELD_IS_DETAIL + ', ' +\n      '.' + this.CssClasses_.TEMPLATE\n      ),\n      function(element) {\n        element.remove();\n      }\n    );\n  };\n\n  /**\n   * Setea los valores de las propiedades\n   *\n   * @param {object} record - objeto con los valores a remplazar\n   * @param {HTMLelement} newRecord - Record nuevo al cual se le actualizan los campos\n   * @private\n   */\n  FieloRecordSet.prototype.setFieldsValues_ = function(record, newRecord) {\n    // Itero cada propiedad\n    this.records_.fields.forEach(function(fieldName) {\n      // traigo los campos que coinciden con esa propiedad\n      var field = newRecord.querySelector(\n        '.' + this.CssClasses_.FIELD_IS + fieldName\n      );\n\n      // si la propiedad es igual al nombre del campo\n      if (field) {\n        // buscar dentro de linkToDetail la clase fielo-output\n        var outputField = field.querySelector(\n          '.' + this.CssClasses_.OUTPUT\n        );\n\n        if (outputField) {\n          // Remuevo el atributo data upgrade\n          outputField.removeAttribute(this.Constant_.DATA_UPGRADED);\n\n          // actualizo el valor mostrado al usuario\n          outputField.innerHTML = record[fieldName];\n\n          if (outputField.hasAttribute(this.Constant_.DATA_VALUE)) {\n            // Actualizo el valor de data-value\n            outputField.setAttribute(\n              this.Constant_.DATA_VALUE, record[fieldName]\n            );\n          }\n\n          // Terminé de configurarlo, ahora lo inicializo\n          componentHandler.upgradeElement(\n            outputField,\n            this.Constant_.MODULE_OUTPUT\n          );\n        }\n      }\n    }, this);\n  };\n\n  /**\n   * Setea los valores de los links al detail\n   *\n   * @param {object} record - objeto con los valores a remplazar\n   * @param {HTMLelement} newRecord - Record nuevo al cual se le actualizan los campos\n   * @private\n   */\n  FieloRecordSet.prototype.setLinksToDetailValues_ = function(record,\n    newRecord) {\n    // Iterates per link to details to replace href\n    [].forEach.call(\n      newRecord.querySelectorAll('.' + this.CssClasses_.LINK_TO_DETAIL),\n      function(link) {\n        // Update Href\n        var href = link.getAttribute('href');\n\n        // Get the parameters from the href\n        var params = href.split('?');\n        var base = params[0];\n        params = params[1];\n        params = params.split('&');\n        var detailParam =\n          link.getAttribute(this.Constant_.DATA_DETAIL_PARAMETER);\n        params.forEach(function(param, index) {\n          if (param.indexOf(detailParam) >= 0) {\n            params[index] = detailParam + '=' +\n              record.Id;\n          }\n        });\n        href = base + '?' + (params.join('&'));\n        link.setAttribute('href', href);\n      },\n    this);\n  };\n\n  /**\n   * Setea los valores de los subcomponentes\n   *\n   * @param {object} record - objeto con los valores a remplazar\n   * @param {HTMLelement} newRecord - Record nuevo al cual se le actualizan los campos\n   * @private\n   */\n  FieloRecordSet.prototype.setSubcomponentsValues_ = function(\n    record,\n    newRecord\n  ) {\n    // Iterate per subcomponents\n    [].forEach.call(\n      newRecord\n        .querySelectorAll('[' + this.Constant_.DATA_ATTRIBUTE_REPLACE + ']'),\n      function(element) {\n        // Get object property to use\n        var propertyName =\n          element.getAttribute(this.Constant_.DATA_OBJECT_PROPERTY);\n\n        if (typeof record[propertyName] === 'undefined') {\n          element.classList.add('hidden');\n        } else {\n          // Get attribute to replace\n          var attributeName =\n            element.getAttribute(this.Constant_.DATA_ATTRIBUTE_REPLACE);\n          // Replace object property value into corresponding attribute\n          var value = record[propertyName];\n          if (attributeName === 'src' || attributeName === 'href') {\n            value = fieloUtils.decodeHTMLEntities(record[propertyName]);\n          }\n          // Guarda el valor\n          element.setAttribute(attributeName, value);\n          element.classList.remove('hidden');\n        }\n      },\n     this\n    );\n  };\n\n  //  Public methods\n\n  /**\n   * Renderiza los resultados\n   * @param {array} records - Array con registros en formato json\n   * @param {function} callback - función con método a disparar cuando se termina la peticion\n   */\n  FieloRecordSet.prototype.render = function(records, callback) {\n    //  Si NO tengo records\n    if (typeof records.length === 'undefined' || records.length === 0) {\n      // Deshabilita el contenido\n      this.data_.classList.add(this.CssClasses_.DATA_DISABLED);\n      //  Elimina los elementos de la lista\n      fieloUtils.message.FieloMessage.clear();\n      fieloUtils.message.FieloMessage.addMessages(\n        fieloUtils.site.FieloSite.getLabel('noResultsFound')\n      );\n      fieloUtils.message.FieloMessage.setRedirect('#', 4);\n      fieloUtils.message.FieloMessage.show();\n      /*\n       [].slice.call(this.data_.children).forEach(function(child) {\n        child.parentNode.removeChild(child);\n      });\n      */\n    } else {\n      // Habilita el contenido\n      this.data_.classList.remove(this.CssClasses_.DATA_DISABLED);\n      // Acciones comunes a todas las vistas\n\n      // Registro las propiedades de los records en un Array\n      this.records_.fields = Object.keys(records[0]);\n\n      // limpio el contenedor data\n      this.cleanDataChilds_();\n\n   // Preparo el Array donde se guardan los templates\n      var newSetOfTemplates = [];\n\n      // Preparo el Array donde se guardan los records por template\n      var newSetOfRecords = [];\n\n      // Cantidad de registros agregados en total\n      var recordsAddedInTotal = 0;\n      records.forEach(function(record) {\n        // Cantidad de registros agregados por template\n        var recordsAddedPerTemplate = 0;\n        // Creo un record temporal\n        var newRecord = this.recordTemplate_.cloneNode(true);\n\n        this.setFieldsValues_(record, newRecord);\n\n        this.setLinksToDetailValues_(record, newRecord);\n\n        this.setSubcomponentsValues_(record, newRecord);\n\n        newSetOfRecords.push(newRecord);\n        recordsAddedInTotal += 1;\n\n        newRecord = null;\n\n        // Si el recordSetTemplate es el mismo nodo que el record\n        if (!this.onlyOneTemplate_) {\n          recordsAddedPerTemplate += 1;\n          if (\n            recordsAddedPerTemplate === this.records_.inTemplate ||\n            records.length === recordsAddedInTotal\n          ) {\n            // Agrego los records al nuevo set de template (clonando)\n            newSetOfTemplates.push(newSetOfRecords.slice(0));\n            // limpio el set de records\n            newSetOfRecords.length = 0;\n            // llevo el contador a 0\n            recordsAddedPerTemplate = 0;\n          }\n        }\n      }, this);\n\n      // Si el recordSetTemplate es el mismo nodo que el record\n      if (this.onlyOneTemplate_) {\n        // newSetOfRecords\n        newSetOfRecords.forEach(\n          function(record) {\n            this.data_.appendChild(record);\n          },\n          this\n        );\n      } else {\n        newSetOfTemplates.forEach(function(template) {\n          var newTemplate = this.recordSetTemplate_.cloneNode(true);\n          // borro todos los hijos de este nodo\n          while (newTemplate.hasChildNodes()) {\n            newTemplate.removeChild(newTemplate.firstChild);\n          }\n\n          template.forEach(\n            function(record) {\n              newTemplate.appendChild(record);\n            },\n            this\n          );\n          // Adjunto los template a data\n          this.data_.appendChild(newTemplate);\n        }, this);\n      }\n\n      // Terminé de configurarlo, ahora lo inicializo en segundo plano\n      setTimeout(function() {\n        var records =\n          this.element_.querySelectorAll('.' + this.CssClasses_.RECORD);\n        componentHandler.upgradeElements(records);\n        [].forEach.call(records, function(record) {\n          record.FieloRecord.initForms();\n        });\n      }.bind(this), 0);\n    }\n\n    // llamo al callback\n    if (callback) {\n      callback(records);\n    }\n  };\n\n  /**\n   * Inicializa el elemento\n   */\n  FieloRecordSet.prototype.init = function() {\n    if (this.element_) {\n      this.setDefaults_();\n    }\n  };\n\n  //  El componente se registra por si solo.\n  //  Asume que el componentHandler esta habilitado en el scope global\n  componentHandler.register({\n    constructor: FieloRecordSet,\n    classAsString: 'FieloRecordSet',\n    cssClass: 'fielo-record-set'\n  });\n})();\n","\n/*\n@TODO\n// Limpio todos los acordiones que hayan quedado de antes\n[].forEach.call(\n  document.querySelectorAll('.fielo-field--is-accordion'),\n    function(old) {\n      old.parentNode.removeChild(old);\n    }\n  );\n */\n\n(function() {\n  'use strict';\n\n  /**\n   * @description Clase constructora que analiza los record.\n   * FieloRecord activa las funcionalidades para cada record\n   * Implementa los patrones de diseño definidos por MDL en\n   * {@link https://github.com/jasonmayes/mdl-component-design-pattern}\n   *\n   * @version 1\n   * @author Hugo Gómez Mac Gregor <hugo.gomez@fielo.com>\n   * @param {HTMLElement} element - Elemento que será mejorado.\n   * @constructor\n   */\n  var FieloRecord = function FieloRecord(element) {\n    this.element_ = element;\n\n    // Initialize instance.\n    this.init();\n  };\n  window.FieloRecord = FieloRecord;\n\n  // Properties\n\n  /**\n   * Guarda strings para nombres de clases definidas por este componente que son usadas por JavaScript.\n   * Esto nos permite cambiarlos solo en un lugar\n   * @enum {string}\n   * @private\n   */\n  FieloRecord.prototype.CssClasses_ = {\n    // Links a detalles\n    LINK_TO_DETAIL: 'fielo-link__to-detail',\n    LINK_IS_PAGE: 'fielo-link__to-detail--is-InternalPage',\n    LINK_IS_MODAL: 'fielo-link__to-detail--is-Modal',\n    LINK_IS_ACCORDION: 'fielo-link__to-detail--is-Accordion',\n    // elemento que contiene un campo del record\n    FIELD: 'fielo-field',\n    // Elemento record\n    // @todo a deprecar\n    RECORD: 'fielo-record',\n    RECORD_SET: 'fielo-record-set',\n    // elemento de tipo accordion\n    FIELD_IS_ACCORDION: 'fielo-field--is-accordion',\n    // Campo de tipo detalle\n    DETAIL: 'fielo-field--is-detail',\n    // Representa elemento oculto\n    HIDDEN: 'hidden'\n\n  };\n\n/**\n   * Guarda las constantes en un lugar para que sean facilmente actualizadas\n   * @enum {string | number}\n   * @private\n   */\n  FieloRecord.prototype.Constant_ = {\n    COMPONENT_NAME: 'data-component-name'\n  };\n\n  // Private methods\n\n  /**\n   * Setea los registros por defecto\n   *\n   * @private\n   */\n  FieloRecord.prototype.setDefaults_ = function() {\n    this.detailIsLoaded_ = false;\n    this.linksToDetail_ = this.element_.querySelectorAll(\n      '.' + this.CssClasses_.LINK_TO_DETAIL\n    );\n    this.recordset_ = fieloUtils.getParentUntil(\n        this.element_,\n        '.' + this.CssClasses_.RECORD_SET\n      );\n    if (this.recordset_) {\n      this.componentName_ =\n        this.recordset_.getAttribute(this.Constant_.COMPONENT_NAME);\n    } else {\n      this.componentName_ = '';\n    }\n  };\n\n  /**\n   * Setea los listeners de los links\n   *\n   * @private\n   */\n  FieloRecord.prototype.setLinksListeners_ = function() {\n    [].forEach.call(this.linksToDetail_, function(link) {\n      // Muestra el slider con el click\n      link.addEventListener('click', this.clickListener.bind(this));\n    }, this);\n  };\n\n  /**\n   * Crea el elemento detail\n   *\n   * @private\n   */\n  FieloRecord.prototype.createDetail_ = function() {\n    if (\n      this.linksToDetail_[0].classList\n        .contains(this.CssClasses_.LINK_IS_ACCORDION)\n    ) {\n      // Me fijo el wrapper de que nodo se trata para saber que nodo\n      //  crear para el accordion\n      if (this.element_.nodeName === 'TR') {\n        // Si se trata de una tabla\n        // Creo la fila\n        this.detail_ = document.createElement('tr');\n        // Creo la celda como detail\n        this.container_ = document.createElement('td');\n        // Asigno el  colspan para que se estire la celda segun la\n        // cantidad de columnas\n        this.container_\n          .setAttribute('colspan', this.element_.childElementCount);\n        // Agrega clase de tipo detail\n        this.container_.classList.add(this.CssClasses_.DETAIL);\n        // Anexo la celda a la fila\n        this.detail_.appendChild(this.container_);\n      } else {\n        this.detail_ = document.createElement('div');\n        // de tipo detail\n        this.detail_.classList.add(this.CssClasses_.DETAIL);\n        this.container_ = this.detail_;\n      }\n      this.detail_.classList.add(this.CssClasses_.FIELD_IS_ACCORDION);\n      this.detail_.classList.add(this.CssClasses_.HIDDEN);\n    } else {\n      this.detail_ = document.createElement('div');\n      // de tipo detail\n      this.detail_.classList.add(this.CssClasses_.DETAIL);\n      this.container_ = this.detail_;\n    }\n  };\n\n  /**\n   *\n   * @param {HTMLelement} element - Elemento a mejorar\n   * @private\n   */\n  FieloRecord.prototype.upgrade_ = function(element) {\n    componentHandler.upgradeElements(element);\n  };\n\n  // Public methods\n\n  /**\n   * Método atacheado al link listener\n   *\n   * @param {event} event - evento disparado por el click\n   * @public\n   */\n  FieloRecord.prototype.clickListener = function(event) {\n    var hasLinkToPage = fieloUtils\n      .getParentUntil(event.target, '.' + this.CssClasses_.LINK_TO_DETAIL)\n      .classList.contains(this.CssClasses_.LINK_IS_PAGE);\n\n    if (!hasLinkToPage) {\n      event.preventDefault();\n      event.stopPropagation();\n      this.open();\n    }\n  };\n\n  /**\n   * Método para mostrar el detalle\n   *\n   * @public\n   */\n  FieloRecord.prototype.open = function() {\n    // Abro y cierro el accordion\n    if (\n      this.linksToDetail_[0].classList\n        .contains(this.CssClasses_.LINK_IS_ACCORDION)\n    ) {\n      this.detail_.classList.toggle(this.CssClasses_.HIDDEN);\n    } else if (\n      // Configuro el modal y lo abro\n      this.linksToDetail_[0].classList\n        .contains(this.CssClasses_.LINK_IS_MODAL)\n    ) {\n      var detailForModal = this.detail_.cloneNode(true);\n      this.upgrade_(\n        detailForModal.querySelector('.' + this.CssClasses_.RECORD)\n      );\n      fieloUtils.modal.FieloModal.setCalledBy(this.componentName_);\n      fieloUtils.modal.FieloModal.setContent(detailForModal);\n      fieloUtils.modal.FieloModal.show();\n    }\n  };\n\n  /**\n   * Obtiene el contenido del detalle y lo agrega al field\n   *\n   * @public\n   */\n  FieloRecord.prototype.setDetailContent = function() {\n    if (!this.detailIsLoaded_) {\n      setTimeout(function() {\n        fieloUtils.ajax(this.link_, false, function(body, status) {\n          if (status === 200) {\n            while (body.childElementCount > 0) {\n              // adjunto el contenido al detail\n              this.container_.appendChild(body.children[0]);\n              componentHandler.upgradeElements(this.container_);\n            }\n          } else {\n            fieloUtils.debug.log(\n              'There was an error loding the content: code error ' + status\n            );\n          }\n          // si es acordeon adjunto el detail al record\n          if (\n            this.linksToDetail_[0].classList\n              .contains(this.CssClasses_.LINK_IS_ACCORDION)\n          ) {\n            if (this.element_.nodeName === 'TR') {\n              // Inserto la fila luego del record\n              this.element_.parentNode.insertBefore(\n                this.detail_,\n                this.element_.nextSibling\n              );\n            } else {\n              // adjunto el detail al record\n              this.element_.appendChild(this.detail_);\n            }\n          }\n          this.detailIsLoaded_ = true;\n        }.bind(this));\n      }.bind(this));\n    }\n  };\n\n  /**\n   * Inicializa los formularios de un record\n   */\n  FieloRecord.prototype.initForms = function() {\n    // @todo: para ser deprecado\n    // inicializo los forms\n    oldLoader.initForms_(this.element_);\n  };\n\n  /**\n   * Inicializa el elemento\n   */\n  FieloRecord.prototype.init = function() {\n    if (this.element_) {\n      this.setDefaults_();\n      if (this.linksToDetail_.length > 0) {\n        // Guardo el enlace en .link\n        this.link_ = this.linksToDetail_[0].getAttribute('href');\n        // crea el detail\n        this.createDetail_();\n        // le seteo los listeners a los links\n        this.setLinksListeners_();\n        // Le guardo su contenido\n        if (\n          !this.linksToDetail_[0].classList\n            .contains(this.CssClasses_.LINK_IS_PAGE)\n        ) {\n          this.setDetailContent();\n        }\n      }\n    }\n  };\n\n  // El componente se registra por si solo.\n  // Asume que el componentHandler esta habilitado en el scope global\n  componentHandler.register({\n    constructor: FieloRecord,\n    classAsString: 'FieloRecord',\n    cssClass: 'fielo-record'\n  });\n})();\n","(function() {\n  'use strict';\n\n  /**\n   * @description Clase constructora de los paginados.\n   * FieloPaginator activa el funcionamiento del paginado\n   * Implementa los patrones de diseño definidos por MDL en\n   * {@link https://github.com/jasonmayes/mdl-component-design-pattern}\n   *\n   * @version 2\n   * @author Hugo Gómez Mac Gregor <hugo.gomez@fielo.com>\n   * @contributor Diego Amarante <diego.amarante@fielo.com>\n   * @param {HTMLElement} element - Elemento que será mejorado.\n   * @constructor\n   */\n  var FieloPaginator = function FieloPaginator(element) {\n    this.element_ = element;\n\n    // Initialize instance.\n    this.init();\n  };\n  window.FieloPaginator = FieloPaginator;\n\n  /**\n   * Guarda las constantes en un lugar para que sean facilmente actualizadas\n   * @enum {string | number}\n   * @private\n   */\n  FieloPaginator.prototype.Constant_ = {\n    COMPONENT_ID: 'data-component-id',\n    BINDING: 'data-binding',\n    QUANTITY_PER_PAGE: 'data-quantity-per-page',\n    PAGE: 'data-page',\n    FILTERS: 'data-filters',\n    ORDER_BY: 'data-order-by'\n  };\n\n  /**\n   * Guarda strings para nombres de clases definidas por este componente\n   * que son usadas por JavaScript.\n   * Esto nos permite cambiarlos solo en un lugar\n   * @enum {string}\n   * @private\n   */\n  FieloPaginator.prototype.CssClasses_ = {\n    // Enlaces del paginador\n    LINK_PREVIOUS: 'fielo-link__previous',\n    LINK_NEXT: 'fielo-link__next',\n\n    // RecordSet asociado al paginador\n    RECORD_SET: 'fielo-record-set',\n    // Clase para desabilitar un elemento\n    DISABLED: 'disabled'\n  };\n\n  // Private methods\n\n  /**\n   * Setea los registros por defecto\n   *\n   * @private\n   */\n  FieloPaginator.prototype.setDefaults_ = function() {\n    // Registro las dependencias\n\n    // Asocia el paginador con el recordset correspondiente\n    this.recordSet = fieloUtils.getParentUntil(\n      this.element_,\n      '.' + this.CssClasses_.RECORD_SET\n    );\n\n    // Registro el NS\n    this.ns_ = fieloUtils.site.FieloSite.ns;\n    if (this.ns_ !== '') {\n      this.ns_ += '.';\n    }\n\n    // Regisro el controlador\n    this.controller_ = this.ns_ + 'PageController.getRecords';\n\n    // Registo lo particular\n\n    // registro el id del componente\n    this.componentId_ = this.element_.getAttribute(this.Constant_.COMPONENT_ID);\n\n    // registro el data binding\n    this.dataBinding_ = this.element_.getAttribute(this.Constant_.BINDING);\n\n    // registro la cantidad de items que puede haber en una pagina\n    this.recordsPerPage_ =\n      Number(this.element_.getAttribute(this.Constant_.QUANTITY_PER_PAGE));\n\n    // registro la cantidad de items que hay actualmente en la pagina\n    this.recordsInPage_ = this.recordSet.FieloRecordSet.records_.inPage;\n\n    // registro la pagina actual\n    this.page_ = Number(this.element_.getAttribute(this.Constant_.PAGE)) || 1;\n\n    // registro los filtros\n    this.filters_ =\n      JSON.parse(this.element_.getAttribute(this.Constant_.FILTERS)) || {};\n\n    // registro el orderBy\n    this.orderBy_ = this.element_.getAttribute(this.Constant_.ORDER_BY) || '';\n\n    // Registro los botones\n    this.links_ = {\n      previous:\n        this.element_.querySelector('.' + this.CssClasses_.LINK_PREVIOUS),\n      next:\n        this.element_.querySelector('.' + this.CssClasses_.LINK_NEXT)\n    };\n  };\n\n  /**\n   * Habilita o deshabilita los links\n   *\n   * @private\n   */\n  FieloPaginator.prototype.setLinksStatus_ = function() {\n    // link next\n    if (this.recordsInPage_ < this.recordsPerPage_) {\n      this.links_.next.classList.add(this.CssClasses_.DISABLED);\n    } else {\n      this.links_.next.classList.remove(this.CssClasses_.DISABLED);\n    }\n\n    // link previous\n    if (this.page_ === 1) {\n      this.links_.previous.classList.add(this.CssClasses_.DISABLED);\n    } else {\n      this.links_.previous.classList.remove(this.CssClasses_.DISABLED);\n    }\n  };\n\n  /**\n   * Pide la página anterior\n   *\n   * @private\n   */\n  FieloPaginator.prototype.getPreviousPage_ = function() {\n    if (!this.links_.previous.classList.contains(this.CssClasses_.DISABLED)) {\n      this.setPage(this.page_ - 1);\n      this.getRecords();\n    }\n  };\n\n  /**\n   * Pide la página siguiente\n   *\n   * @private\n   */\n  FieloPaginator.prototype.getNextPage_ = function() {\n    if (!this.links_.next.classList.contains(this.CssClasses_.DISABLED)) {\n      this.setPage(this.page_ + 1);\n      this.getRecords();\n    }\n  };\n\n  /**\n   * Registra los listeners de los links\n   *\n   * @private\n   */\n  FieloPaginator.prototype.setLinksListeners_ = function() {\n    this.links_.previous\n      .addEventListener('click', this.getPreviousPage_.bind(this));\n\n    this.links_.next\n      .addEventListener('click', this.getNextPage_.bind(this));\n  };\n\n  /**\n   * Lanza la configuración inicial de los links\n   *\n   * @private\n   */\n  FieloPaginator.prototype.setUpLinks_ = function() {\n    this.setLinksStatus_();\n    this.setLinksListeners_();\n  };\n\n  // Public methods\n\n  /**\n   * Setea la página\n   *\n   * @param {number} pageNumber - Número de página a guardar\n   * @private\n   */\n  FieloPaginator.prototype.setPage = function(pageNumber) {\n    // actualizo la variable interna\n    this.page_ = pageNumber || 1;\n\n    // actualizo el atributo html\n    this.element_.setAttribute(this.Constant_.PAGE, pageNumber);\n  };\n\n  /**\n   * Devuelve los filtros\n   *\n   * @return {object} Objeto con los filtros aplicados\n   * @public\n   */\n  FieloPaginator.prototype.getFilters = function() {\n    return this.filters_;\n  };\n\n  /**\n   * Setea los filtros\n   *\n   * @param {object} newFilters - Filtros a guardar\n   * @public\n   */\n  FieloPaginator.prototype.setFilters = function(newFilters) {\n    // Actualizo los filtros pasados\n    for (var filter in newFilters) {\n      if ({}.hasOwnProperty.call(newFilters, filter)) {\n        this.filters_[filter] = newFilters[filter];\n      }\n    }\n\n    // actualizo el atributo html\n    this.element_.setAttribute(\n      this.Constant_.FILTERS,\n      JSON.stringify(this.filters)\n    );\n  };\n\n  /**\n   * Setea el orderBy\n   *\n   * @param {string} order - Orden que se aplica al paginado\n   * @private\n   */\n  FieloPaginator.prototype.setOrderBy = function(order) {\n    // actualizo la variable interna\n    this.orderBy_ = order;\n\n    // actualizo el atributo html\n    this.element_.setAttribute(this.Constant_.ORDER_BY, order);\n  };\n\n  /**\n   * Método que resuelve el request del paginador\n   *\n   * @param {function} callback - función con método a disparar cuando se termina la peticion\n   * @param {array} records - Array con registros en formato json\n   * @private\n   */\n  FieloPaginator.prototype.resolveRequest_ = function(callback, records) {\n    // Ya está todo listo. Oculto el spinner\n    fieloUtils.spinner.FieloSpinner.hide();\n    setTimeout(function() {\n      // Si existen records\n      if (records) {\n        // Actualizo la cantidad de tegistros en la pagina\n        this.recordsInPage_ = records.length || 0;\n        // Actualiza el estado de los links\n        this.setLinksStatus_();\n        this.recordSet.FieloRecordSet.render(records, callback);\n      } else {\n        throw new Error('todo: no hay registros a mostrar', 'paginator.js');\n      }\n    }.bind(this), 0);\n  };\n\n  /**\n   * Obtiene los records pedidos\n   * @param {function} callback - método a disparar cuando se termina la peticion\n   *\n   */\n  FieloPaginator.prototype.getRecords = function(callback) {\n    // muestro el spinner antes de la petición\n    fieloUtils.spinner.FieloSpinner.show();\n    try {\n      // Ejecuto a segundo plano para no trabar el navegador\n      setTimeout(function() {\n        Visualforce.remoting.Manager.invokeAction(\n          this.controller_,\n          this.componentId_,\n          this.page_,\n          this.orderBy_,\n          JSON.stringify(this.filters_),\n          this.resolveRequest_.bind(this, callback),\n          {escape: false}\n        );\n      }.bind(this), 0);\n    } catch (e) {\n      // Ya está todo listo. Oculto el spinner\n      fieloUtils.spinner.FieloSpinner.hide();\n      fieloUtils.debug.log(e);\n    }\n  };\n\n  /**\n   * Inicializa el elemento\n   */\n  FieloPaginator.prototype.init = function() {\n    if (this.element_) {\n      this.setDefaults_();\n      this.setUpLinks_();\n    }\n  };\n\n  // El componente se registra por si solo.\n  // Asume que el componentHandler esta habilitado en el scope global\n  componentHandler.register({\n    constructor: FieloPaginator,\n    classAsString: 'FieloPaginator',\n    cssClass: 'fielo-paginator'\n  });\n})();\n","(function() {\n  'use strict';\n\n  /**\n   * @description Clase constructora de los paginados.\n   * FieloOrderBy activa el funcionamiento del paginado\n   * Implementa los patrones de diseño definidos por MDL en\n   * {@link https://github.com/jasonmayes/mdl-component-design-pattern}\n   *\n   * @version 2\n   * @author Hugo Gómez Mac Gregor <hugo.gomez@fielo.com>\n   * @contributor Diego Amarante <diego.amarante@fielo.com>\n   * @param {HTMLElement} element - Elemento que será mejorado.\n   * @constructor\n   */\n  var FieloOrderBy = function FieloOrderBy(element) {\n    this.element_ = element;\n    // Initialize instance.\n    this.init();\n  };\n  window.FieloOrderBy = FieloOrderBy;\n\n  /**\n   * Guarda las constantes en un lugar para que sean facilmente actualizadas\n   * @enum {string | number}\n   * @private\n   */\n  FieloOrderBy.prototype.Constant_ = {\n    ORDER_VALUE: 'data-order-value',\n    DATA_MENU_TYPE: 'data-order-by-type'\n  };\n\n  /**\n   * Guarda strings para nombres de clases definidas por este componente\n   * que son usadas por JavaScript.\n   * Esto nos permite cambiarlos solo en un lugar\n   * @enum {string}\n   * @private\n   */\n  FieloOrderBy.prototype.CssClasses_ = {\n    // paginador\n    PAGINATOR: 'fielo-paginator',\n    // RecordSet asociado al order By\n    RECORD_SET: 'fielo-record-set',\n\n    // Clase para abrir el menu\n    MENU_IS_OPEN: 'fielo-order-by--is-open',\n\n    // Items por los cuales se puede ordenar\n    ORDER_BY_ITEM: 'fielo-order-by__item',\n\n    // Tipos de orden\n    ASC: 'fielo-order-by__item--is-asc',\n    DESC: 'fielo-order-by__item--is-desc',\n\n    // Item activo\n    ACTIVE: 'active'\n  };\n\n  // Private methods\n\n  /**\n   * Setea los registros por defecto\n   *\n   * @private\n   */\n  FieloOrderBy.prototype.setDefaults_ = function() {\n    // Guardo valores por defecto\n    this.defaults_ = {\n      menuType: 'popup',\n      orderValue: ''\n    };\n\n    // Asocia el order by con el paginador correspondiente\n    this.recordSet_ = fieloUtils.getParentUntil(\n      this.element_,\n      '.' + this.CssClasses_.RECORD_SET\n    );\n\n    // Asocia el orderBy con el recordset correspondiente\n    this.paginator_ =\n      this.recordSet_.querySelector('.' + this.CssClasses_.PAGINATOR);\n\n    // registro el tipo de menu\n    this.menuType_ =\n      this.element_.getAttribute(this.Constant_.DATA_MENU_TYPE) ||\n      this.defaults_.menuType;\n\n    // Registro todos los items\n    this.items_ =\n      this.element_.querySelectorAll('.' + this.CssClasses_.ORDER_BY_ITEM);\n\n    // Registro el item activo\n    this.itemActive_ =\n      this.element_.querySelector('.' + this.CssClasses_.ACTIVE);\n\n    // Registro el orderValue\n    this.orderValue_ = '';\n\n    // Registro si el click puede activar el item\n    this.allowActive_ = false;\n\n    // Me fijo si puedo permitir activar el item segun el tipo\n    this.setAllowActiveByType_();\n  };\n\n  /**\n   * Define si puedo activar el item en la primera carga  segun el tipo de menu\n   *\n   * @private\n   */\n  FieloOrderBy.prototype.setAllowActiveByType_ = function() {\n    switch (this.menuType_) {\n      case 'list':\n        // cualquier otro menu\n        this.allowActive_ = true;\n        break;\n      default:\n    }\n  };\n\n  /**\n   * Define el valor por defecto segun el tipo de menu\n   *\n   * @param {HTMLelement} item - Item a activar\n   * @private\n   */\n  FieloOrderBy.prototype.checkAllowActive_ = function(item) {\n    // Al abrir el menu activo los items\n    this.allowActive_ = !this.itemActive_.isEqualNode(item);\n  };\n\n  /**\n   * Abre / Cierra el menú de ser necesario\n   *\n   * @private\n   */\n  FieloOrderBy.prototype.toggleOpen_ = function() {\n    switch (this.menuType_) {\n      case 'popup':\n        // Abro el menu\n        this.element_.classList.toggle(this.CssClasses_.MENU_IS_OPEN);\n        break;\n      case 'list':\n      default:\n        // cualquier otro menu\n    }\n  };\n\n  /**\n   * Activa el item clickeado\n   *\n   * @param {HTMLelement} item - Item a activar\n   * @private\n   */\n  FieloOrderBy.prototype.activeItem_ = function(item) {\n    // Si existe item activo Y el item clickeado no es el activo\n    if (this.itemActive_) {\n      // Limpo al activo viejo de todas sus clases\n      this.itemActive_.classList.remove(this.CssClasses_.ACTIVE);\n      this.itemActive_.classList.remove(this.CssClasses_.ASC);\n      this.itemActive_.classList.remove(this.CssClasses_.DESC);\n    }\n\n    // Guardo el order value\n    this.orderValue_ = item.getAttribute(this.Constant_.ORDER_VALUE) ||\n          this.defaults_.orderValue;\n\n    // Especifico el comportamiento de los selectores\n    switch (this.menuType_) {\n      case 'list':\n        // Le tengo que guardar el order value\n        // Hace toggle entre ASC y DESC\n        // Guardo el valor de orden\n        if (this.orderValue_.indexOf('ASC') >= 0) {\n          this.orderValue_ = this.orderValue_.replace('ASC', 'DESC');\n          item.classList.add(this.CssClasses_.DESC);\n        } else if (this.orderValue_.indexOf('DESC') >= 0) {\n          this.orderValue_ = this.orderValue_.replace('DESC', 'ASC');\n          item.classList.add(this.CssClasses_.ASC);\n        } else {\n          this.orderValue_ += ' ASC';\n          item.classList.add(this.CssClasses_.ASC);\n        }\n\n        item.setAttribute(this.Constant_.ORDER_VALUE, this.orderValue_);\n        break;\n      case 'popup':\n      default:\n        // Ya viene el order value. Actualizo su valor\n    }\n\n    // Actualizo el item clickeado como activo\n    this.itemActive_ = item;\n\n    // Lo activo\n    this.itemActive_.classList.add(this.CssClasses_.ACTIVE);\n  };\n\n  /**\n   * Inicializa cada item\n   *@param {event} click - Evento de tipo click\n   * @private\n   */\n  FieloOrderBy.prototype.itemClickListener_ = function(click) {\n    // Me fijo si puedo activar este item\n    this.checkAllowActive_(click.target);\n\n    // Me fijo si puedo permitir activar el item segun el tipo\n    this.setAllowActiveByType_();\n\n    // Si allowActive_ es verdadero y no se trata del mismo link\n    // entonces permito que al clickear un item pase a estado activo\n    if (this.allowActive_) {\n      // activo el item clickeado\n      this.activeItem_(click.target);\n\n      // Seteo el paginador\n      this.paginator_.FieloPaginator.setOrderBy(this.orderValue_);\n      this.paginator_.FieloPaginator.setPage();\n      this.paginator_.FieloPaginator.getRecords();\n    }\n\n    // Si tengo menú lo abro o cierro\n    this.toggleOpen_();\n  };\n\n  /**\n   * Inicializa cada item\n   *\n   * @private\n   */\n  FieloOrderBy.prototype.setupItems_ = function() {\n    [].forEach.call(this.items_, function(item) {\n      item.addEventListener('click', this.itemClickListener_.bind(this));\n    }, this);\n  };\n\n  // Public methods\n\n  /**\n   * Inicializa el elemento\n   */\n  FieloOrderBy.prototype.init = function() {\n    if (this.element_) {\n      this.setDefaults_();\n      this.setupItems_();\n    }\n  };\n\n  // El componente se registra por si solo.\n  // Asume que el componentHandler esta habilitado en el scope global\n  componentHandler.register({\n    constructor: FieloOrderBy,\n    classAsString: 'FieloOrderBy',\n    cssClass: 'fielo-order-by'\n  });\n})();\n","(function() {\n  'use strict';\n\n  /**\n   * @description Clase constructora de los filtros.\n   * FieloFilter activa el funcionamiento de los filtros\n   * Implementa los patrones de diseño definidos por MDL en\n   * {@link https://github.com/jasonmayes/mdl-component-design-pattern}\n   *\n   * @version 2\n   * @author Hugo Gómez Mac Gregor <hugo.gomez@fielo.com>\n   * @contributor Diego Amarante <diego.amarante@fielo.com>\n   * @param {HTMLElement} element - Elemento que será mejorado.\n   * @constructor\n   */\n  var FieloFilter = function FieloFilter(element) {\n    this.element_ = element;\n    // Initialize instance.\n    this.init();\n  };\n  window.FieloFilter = FieloFilter;\n\n  /**\n   * Guarda las constantes en un lugar para que sean facilmente actualizadas\n   * @enum {string | number}\n   * @private\n   */\n  FieloFilter.prototype.Constant_ = {\n    BINDING: 'data-binding',\n    DATA_ID: 'data-id',\n    CATEGORY: 'category',\n    TAG: 'tag'\n  };\n\n  /**\n   * Guarda strings para nombres de clases definidas por este componente\n   * que son usadas por JavaScript.\n   * Esto nos permite cambiarlos solo en un lugar\n   * @enum {string}\n   * @private\n   */\n  FieloFilter.prototype.CssClasses_ = {\n    // Contenedor de los filtros\n    LIST: 'fielo-list',\n\n    // Filtro de categorias\n    CATEGORY: 'fielo-filter--is-category',\n\n    // Filtro de categorias\n    TAG: 'fielo-filter--is-tag',\n\n    // Items de filtros\n    ITEM: 'fielo-list__item',\n    LINK: 'fielo-link',\n\n    // Item activo\n    PAGINATOR: 'fielo-paginator',\n\n    // Item activo\n    ACTIVE: 'active'\n\n  };\n\n  // Private methods\n\n  /**\n   * Setea los registros por defecto\n   *\n   * @private\n   */\n  FieloFilter.prototype.setDefaults_ = function() {\n    // Guardo la lista de items\n    this.list_ = this.element_.querySelector('.' + this.CssClasses_.LIST);\n\n    // Registro todos los items\n    this.items_ =\n      this.list_.querySelectorAll(\n        '.' + this.CssClasses_.ITEM + ' ' +\n        '.' + this.CssClasses_.LINK\n      );\n\n    // Registro el item activo\n    this.itemActive_ = this.list_.querySelector(\n      '.' + this.CssClasses_.ITEM + ' ' +\n      '.' + this.CssClasses_.ACTIVE\n    ) || false;\n\n    // registro el data binding\n    this.dataBinding_ = this.list_.getAttribute(this.Constant_.BINDING) || '\"\"';\n\n    // Seteo el filtro\n    this.filters_ = {};\n\n    // Setea el tipo de filtro\n    this.setType_();\n\n    // Registro los paginadores de este filtro\n    this.bindWithPaginators_();\n\n    // Seteo los items\n    this.setupItems_();\n  };\n\n  /**\n   * Setea el tipo de filtro\n   *\n   * @private\n   */\n  FieloFilter.prototype.bindWithPaginators_ = function() {\n    // defino la variable\n    this.listOfPaginators_ = document.querySelectorAll(\n      '.' + this.CssClasses_.PAGINATOR +\n      '[' + this.Constant_.BINDING + '=' + this.dataBinding_ + ']'\n    );\n  };\n\n  /**\n   * Setea el tipo de filtro\n   *\n   * @private\n   */\n  FieloFilter.prototype.setType_ = function() {\n    // valor por default\n    this.type_ = '';\n\n    // Guardo que tipo de filtro es\n    if (this.element_.classList.contains(this.CssClasses_.CATEGORY)) {\n      this.type_ = this.Constant_.CATEGORY;\n    } else if (this.element_.classList.contains(this.CssClasses_.TAG)) {\n      this.type_ = this.Constant_.TAG;\n    }\n  };\n\n  /**\n   * Limpia el item activo de sus propiedades\n   *\n   * @private\n   */\n  FieloFilter.prototype.cleanActiveCss_ = function() {\n    // si existe un item activo\n    if (this.itemActive_) {\n      // Limpo al activo viejo de todas sus clases\n      this.itemActive_.classList.remove(this.CssClasses_.ACTIVE);\n\n      // remueve el activo al padre ITEM\n      fieloUtils.getParentUntil(\n        this.itemActive_,\n        '.' + this.CssClasses_.ITEM\n      )\n      .classList.remove(this.CssClasses_.ACTIVE);\n    }\n  };\n\n  /**\n   * Verifico si el item ya esta activado\n   *\n   * @param {HTMLelement} item - Item a analizar\n   * @private\n   */\n  FieloFilter.prototype.checkIfItemIsAlreadyActive_ = function(item) {\n    if (item.classList.contains(this.CssClasses_.ACTIVE)) {\n      this.clickedOnSameItem_ = true;\n    } else {\n      this.clickedOnSameItem_ = false;\n    }\n  };\n\n  /**\n   * Activa el item clickeado\n   *\n   * @param {HTMLelement} item - Item a activar\n   * @private\n   */\n  FieloFilter.prototype.activeItem_ = function(item) {\n    this.checkIfItemIsAlreadyActive_(item);\n\n    this.cleanActiveCss_();\n    if (this.clickedOnSameItem_) {\n      // limpio el filtro del actual\n      this.removeFilter_();\n\n      // Paso el itemActive a false porque ya no hay item activo\n      this.itemActive = false;\n    } else {\n      // 2_ No tengo item activo\n      // Agregar filtro\n      this.addFilter_(item);\n      // Activar actual\n      this.itemActive_ = item;\n      // Lo activo\n      this.itemActive_.classList.add(this.CssClasses_.ACTIVE);\n      // Activo el padre\n      fieloUtils.getParentUntil(\n        this.itemActive_,\n        '.' + this.CssClasses_.ITEM\n      )\n      .classList.add(this.CssClasses_.ACTIVE);\n    }\n  };\n\n  /**\n   * Limpia el filtro para ser mandado al paginador\n   *\n   * @param {HTMLelement} paginator - paginador asociado\n   * @private\n   */\n  FieloFilter.prototype.removeFilter_ = function() {\n    if (this.type_ === this.Constant_.CATEGORY) {\n      this.filters_.Category__c = null; // eslint-disable-line camelcase\n    } else if (this.type_ === this.Constant_.TAG) {\n      this.filters_.Tag__c = null; // eslint-disable-line camelcase\n    }\n  };\n\n  /**\n   * Prepara el filtro para ser mandado al paginador\n   *\n   * @param {HTMLelement} item - Item a activar\n   * @private\n   */\n  FieloFilter.prototype.addFilter_ = function(item) {\n    var dataId = item.getAttribute(this.Constant_.DATA_ID);\n    // Obtengo el data id\n    if (this.type_ === this.Constant_.CATEGORY) {\n      this.filters_.Category__c = dataId; // eslint-disable-line camelcase\n    } else if (this.type_ === this.Constant_.TAG) {\n      this.filters_.Tag__c = dataId; // eslint-disable-line camelcase\n    }\n  };\n\n  /**\n   * Inicializa cada item\n   *@param {event} click - Evento de tipo click\n   * @private\n   */\n  FieloFilter.prototype.itemClickListener_ = function(click) {\n    click.preventDefault();\n\n    // activo el item clickeado\n    this.activeItem_(click.target);\n\n    // disparo los paginadores\n    [].forEach.call(this.listOfPaginators_, function(paginator) {\n      // Seteo el paginador\n      paginator.FieloPaginator.setFilters(this.filters_);\n      paginator.FieloPaginator.setPage();\n      paginator.FieloPaginator.getRecords();\n    }, this);\n  };\n\n  /**\n   * Inicializa cada item\n   *\n   * @private\n   */\n  FieloFilter.prototype.setupItems_ = function() {\n    [].forEach.call(this.items_, function(item) {\n      item.addEventListener('click', this.itemClickListener_.bind(this));\n    }, this);\n  };\n\n  // Public methods\n\n  /**\n   * Inicializa el elemento\n   */\n  FieloFilter.prototype.init = function() {\n    if (this.element_) {\n      this.setDefaults_();\n    }\n  };\n\n  // El componente se registra por si solo.\n  // Asume que el componentHandler esta habilitado en el scope global\n  componentHandler.register({\n    constructor: FieloFilter,\n    classAsString: 'FieloFilter',\n    cssClass: 'fielo-filter'\n  });\n})();\n","(function() {\n  'use strict';\n\n  /**\n   * @description Clase constructora del app menu.\n   * FieloAppMenu activa las funcionalidades para el app menu\n   * Implementa los patrones de diseño definidos por MDL en\n   * {@link https://github.com/jasonmayes/mdl-component-design-pattern}\n   *\n   * @version 1\n   * @author Nicolas Soberon <nicolas.soberon@fielo.com>\n   * @param {HTMLElement} element - Elemento que será mejorado.\n   * @constructor\n   */\n  var FieloAppMenu = function FieloAppMenu(element) {\n    this.element_ = element;\n\n    // Initialize instance.\n    this.init();\n  };\n  window.FieloAppMenu = FieloAppMenu;\n\n  // Properties\n  /**\n   * Guarda las constantes en un lugar para que sean facilmente actualizadas\n   * @enum {string | number}\n   * @private\n   */\n  FieloAppMenu.prototype.Constant_ = {\n  };\n\n  /**\n   * Guarda strings para nombres de clases definidas por este componente\n   * que son usadas por JavaScript.\n   *\n   * Esto nos permite cambiarlos solo en un lugar\n   *\n   * @enum {string}\n   * @private\n   */\n  FieloAppMenu.prototype.CssClasses_ = {\n    APP_MENU_CONTAINER: 'fielo-app-menu__body',\n    APP_MENU_BTN: 'fielo-app-menu__btn',\n    APP_MENU_BTN_OPEN: 'fielo-app-menu--is-open',\n    APP_MENU_SLIDE_IN: 'fielo-app-menu--is-sliding-in',\n    APP_MENU_SLIDE_OUT: 'fielo-app-menu--is-sliding-out'\n  };\n\n  // Private methods\n\n  /**\n   * Setea los registros por defecto\n   *\n   * @private\n   */\n  FieloAppMenu.prototype.setDefaults_ = function() {\n    this.isOpen_ = false;\n    this.toggleBtn_ =\n      this.element_.querySelector('.' + this.CssClasses_.APP_MENU_BTN);\n  };\n\n  /**\n   *\n   * @param {HTMLelement} element - Elemento a mejorar\n   * @private\n   */\n  FieloAppMenu.prototype.upgrade_ = function(element) {\n    if (element.dataset.upgraded) {\n      var elementUpgrades = element.dataset.upgraded.split(',').slice(1);\n      elementUpgrades.forEach(function(upgrade) {\n        componentHandler.upgradeElement(element, upgrade);\n      });\n    }\n  };\n\n  /**\n   *\n   *\n   * @private\n   */\n  FieloAppMenu.prototype.menuBtn_ = function() {\n    this.toggleBtn_.addEventListener('click', this.toggleMenu_.bind(this));\n  };\n\n  /**\n   *\n   *\n   * @private\n   */\n  FieloAppMenu.prototype.toggleMenu_ = function() {\n    this.element_.classList.toggle(this.CssClasses_.APP_MENU_BTN_OPEN);\n    this.element_.classList.toggle(this.CssClasses_.APP_MENU_SLIDE_IN);\n    if (this.isOpen_) {\n      this.element_.classList.add(this.CssClasses_.APP_MENU_SLIDE_OUT);\n    } else {\n      this.element_.classList.remove(this.CssClasses_.APP_MENU_SLIDE_OUT);\n    }\n    // al cerrar actualizo el status\n    this.isOpen_ = !this.isOpen_;\n  };\n  // Public methods\n\n  /**\n   * Recibe menu a agregar\n   * @param {HTMLelement} element - Elemento a agregar\n   * @private\n   */\n  FieloAppMenu.prototype.addToMenu = function(element) {\n    this.upgrade_(element);\n    this.element_.querySelector('.' + this.CssClasses_.APP_MENU_CONTAINER)\n      .appendChild(element);\n  };\n\n  /**\n   * Inicializa el elemento\n   */\n  FieloAppMenu.prototype.init = function() {\n    if (this.element_) {\n      this.setDefaults_();\n      fieloUtils.appMenu = this.element_;\n      this.menuBtn_();\n    }\n  };\n\n  // El componente se registra por si solo.\n  // Asume que el componentHandler esta habilitado en el scope global\n  componentHandler.register({\n    constructor: FieloAppMenu,\n    classAsString: 'FieloAppMenu',\n    cssClass: 'fielo-app-menu',\n    widget: true\n  });\n})();\n","(function() {\n  'use strict';\n\n  /**\n   * @description Clase constructora del navigation.\n   * FieloMenu activa las funcionalidades para el navigation\n   * Implementa los patrones de diseño definidos por MDL en\n   * {@link https://github.com/jasonmayes/mdl-component-design-pattern}\n   *\n   * @version 1\n   * @author Nicolas Soberon <nicolas.soberon@fielo.com>\n   * @param {HTMLElement} element - Elemento que será mejorado.\n   * @constructor\n   */\n  var FieloMenu = function FieloMenu(element) {\n    this.element_ = element;\n\n    // Initialize instance.\n    this.init();\n  };\n  window.FieloMenu = FieloMenu;\n\n  // Properties\n  /**\n   * Guarda las constantes en un lugar para que sean facilmente actualizadas\n   * @enum {string | number}\n   * @private\n   */\n  FieloMenu.prototype.Constant_ = {\n    APP_MENU: 'appMenu'\n  };\n    /**\n   * Guarda strings para nombres de clases definidas por este componente que son usadas por JavaScript.\n   * Esto nos permite cambiarlos solo en un lugar\n   * @enum {string}\n   * @private\n   */\n  FieloMenu.prototype.CssClasses_ = {\n    /** Elemento que contiene una lista de items (ul) */\n    LIST: 'fielo-list',\n    LIST_ITEM: 'fielo-list__item',\n    HOVER: 'fielo-js-hover'\n  };\n\n  // Private methods\n\n  /**\n   * Setea los registros por defecto\n   *\n   * @private\n   */\n  FieloMenu.prototype.setDefaults_ = function() {\n    this.isAppMenu_();\n\n    // bool\n    this.menuChilds_ = this.element_.querySelectorAll(\n      '.' + this.CssClasses_.LIST + ' .' + this.CssClasses_.LIST\n    );\n    this.parentsActive_ = [];\n  };\n\n  /**\n   * Método que verifica si estoy en un elemento perteneciente al padre\n   *\n   * @private\n   */\n  FieloMenu.prototype.checkHover_ = function() {\n    setTimeout(function() {\n      var elementMouseIsOver = document.querySelectorAll(':hover');\n      elementMouseIsOver = elementMouseIsOver[elementMouseIsOver.length - 1];\n      var actualParent = fieloUtils.getParentUntil(\n        elementMouseIsOver,\n        '.' + this.CssClasses_.HOVER\n      );\n\n      if (actualParent) {\n        // 1.2 Salgo de un padre y entro a un hijo, no hagp nada\n        // 1. Salgo por niveles superiores y hago lo siguiente\n        if (this.parentsActive_.length > 1) {\n          this.removeHover_();\n        }\n      } else {\n        // 2. Salgo por niveles inferiores (no tengo parent)\n        this.removeHover_();\n      }\n    }.bind(this), 100);\n  };\n\n  /**\n   * Método que quita los hover\n   *\n   * @private\n   */\n  FieloMenu.prototype.removeHover_ = function() {\n    if (this.parentsActive_.length > 0) {\n      this.parentsActive_[0].classList.remove(this.CssClasses_.HOVER);\n      this.parentsActive_.shift();\n    }\n  };\n\n  /**\n   * Método que controla el toggle hover del menu\n   *\n   * @private\n   */\n  FieloMenu.prototype.upgradeMenus_ = function() {\n    if (this.menuChilds_.length > 0) {\n      // Busco los menu padres\n      this.menuParents_ = [];\n      [].forEach.call(this.menuChilds_, function(child) {\n        this.menuParents_.push(\n          fieloUtils.getParentUntil(child, '.' + this.CssClasses_.LIST_ITEM)\n        );\n      }, this);\n\n      // activo el hover\n      this.menuParents_.forEach(function(parent) {\n        parent.addEventListener('mouseenter', function() {\n          if (this.parentsActive_.indexOf(parent) === -1) {\n            parent.classList.add(this.CssClasses_.HOVER);\n            this.parentsActive_.push(parent);\n          }\n        }.bind(this));\n        parent.addEventListener('mouseleave', function() {\n          this.checkHover_();\n        }.bind(this));\n      }, this);\n    }\n  };\n\n  /**\n   * Registra si el menu esta disponible en el appMenu\n   *\n   * @private\n   */\n  FieloMenu.prototype.isAppMenu_ = function() {\n    this.appMenuEnabled_ =\n      this.element_.dataset[this.Constant_.APP_MENU] || false;\n  };\n\n  /**\n   * Agrega el menu a appMenu\n   *\n   * @private\n   */\n  FieloMenu.prototype.addToAppMenu_ = function() {\n    if (this.appMenuEnabled_) {\n      var menu = this.element_.cloneNode(true);\n      menu.dataset[this.Constant_.APP_MENU] = false;\n      fieloUtils.appMenu.FieloAppMenu.addToMenu(menu);\n    }\n  };\n\n  // Public methods\n\n  /**\n   * Inicializa el elemento\n   */\n  FieloMenu.prototype.init = function() {\n    if (this.element_) {\n      this.setDefaults_();\n      this.upgradeMenus_();\n      this.addToAppMenu_();\n    }\n  };\n\n  // El componente se registra por si solo.\n  // Asume que el componentHandler esta habilitado en el scope global\n  componentHandler.register({\n    constructor: FieloMenu,\n    classAsString: 'FieloMenu',\n    cssClass: 'fielo-menu',\n    widget: true\n  });\n})();\n","/**\n * @description Inicializa los módulos viejos a deprecar\n *\n * @exports fielo\n * @author Sebastian Claros <sebastian.claros@fielo.com>\n * @author Hugo Gómez Mac Gregor <hugo.gomez@fielo.com>\n * @version 1\n  */\nvar oldLoader = (function() {\n  'use strict';\n\n  var modules = [];\n  var eventListener = {\n    DOMContentLoaded: [],\n    DOMContentReloaded: [],\n    AjaxBeforeSend: [],\n    AjaxComplete: [],\n    ObjectChange: []\n  };\n\n  /**\n   * Registra Event Listeners\n   * @param {string} eventName - evento a registrar: DOMContentLoaded, DOMContentReloaded, AjaxBeforeSend, AjaxComplete, ObjectChange\n   * @param {Function} callback - función asociada al event listener\n   */\n  function addEventListener(eventName, callback) {\n    // Si es un eventName nuevo lo crea\n    if (typeof eventListener[eventName] === 'undefined') {\n      eventListener[eventName] = [];\n    }\n    eventListener[eventName].push(callback);\n  }\n\n/**\n * Dispara el evento\n * @param  {string} event Tipo de evento a disparar\n */\n  function dispatchEvent(event) {\n    var eventName = event.type;\n    if (typeof eventListener[eventName] === 'undefined') {\n      throw new Error('Unkown event ' + eventName, 'oldLoader.js', 43);\n    } else {\n      for (var i = 0, max = eventListener[eventName].length; i < max; i++) {\n        eventListener[eventName][i](event);\n      }\n    }\n  }\n\n  // Return an object exposed to the public\n  return {\n\n    /**\n     * @method\n     * @summary Agrega escuchador de eventos\n     *\n     * @param {string}                    eventName - Nombre del evento a escuchar\n     * @param {callback} callback  - El callback que es asignado al evento registrado\n     */\n    addEventListener: addEventListener,\n\n    /**\n     * @method\n     * @summary Interfaz provista para que los modulos puedan disparar\n     * un evento, por ejemplo cuando se hace una recarga con Ajax se debe\n     * disparar el evento DOMContentReloaded\n     *\n     * @param {string} event Nombre del evento a disparar\n     * @throws {string} Tira un error si el nombre del evento es desconocido\n     * @return {string} Atributo data-package-prefix del nodo HTML\n     */\n    dispatchEvent: dispatchEvent,\n\n     /**\n       * @method\n       * @summary Dispara un evento\n       *\n       * @param {DOMelement} element   Elemento HTML sobre el cual se disparó el evento\n       * @param {string} eventName Evento a disparar\n       */\n    dispatchElementEvent: function(element, eventName) {\n      if ('createEvent' in document) {\n        var evt = document.createEvent('HTMLEvents');\n        evt.initEvent(eventName, false, true);\n        element.dispatchEvent(evt);\n      } else {\n        element.fireEvent('on' + eventName);\n      }\n    },\n\n    /**\n     * @method\n     * @summary inicializa los formularios dentro de un elemento dado\n     *\n     * @param {HTMLelement} element - elemento a buscar formularios\n     * @todo Verificar si ya esta cargado\n     * @todo Verificar las dependencias\n     */\n\n    initForms_: function(element) {\n      oldLoader.dispatchEvent({\n        type: 'DOMContentReloaded',\n        target: element,\n        module: 'form'\n      });\n    },\n\n    /**\n     * @method\n     * @summary Carga el modulo en fielo y lo inicializa\n     *\n     * @param {object} module - módulo a inicializar\n     * @todo Verificar si ya esta cargado\n     * @todo Verificar las dependencias\n     */\n    loadModule: function(module) {\n      // Agrega a la lista\n      modules.push(module);\n      // Crea un alias\n      this[module.getName()] = modules[modules.length - 1];\n\n      // Lo inicializa\n      if (typeof module.initialize !== 'undefined') {\n        module.initialize();\n      }\n    },\n    eventListener: eventListener\n\n  };\n})();\n\n/*\ndocument.addEventListener('DOMContentLoaded', function() {\n  'use strict';\n  oldLoader.dispatchEvent({type: 'DOMContentLoaded', target: document});\n});\n*/\n","(function() {\n  'use strict';\n  /**\n   * @description Este modulo toma como premisa que los componentes se puede actualizar en forma independiente.\n   * Es decir que pueden hacer un pedido nuevo al servidor y actualizar solo su area.\n   * Estas operaciones tiene basicamente dos propositos uno es cambiar la vista actual, como por ejemplo cuando un\n   * Formulario pasa de la vista Detail a Edit.\n   * O bien si se quiere volver a renderizar el componente, por que los valores que muestran estan desactualizados,\n   * Como ser la cantidad de items del carrito a partir de un add to cart.\n   * @author Sebastian Claros <sebastian.claros@fielo.com>\n   * @version 1\n   * @exports fielo/components\n   * @see  fielo\n   */\n  var module = (function() {\n    // private\n    var version = '1';\n    var name = 'components';\n    var urlPath = '/';\n    // Registro el NS\n    var ns_ = fieloUtils.site.FieloSite.ns;\n    if (fieloUtils.site.FieloSite.sitePath_ !== '') {\n      urlPath += fieloUtils.site.FieloSite.sitePath_ + '/';\n    }\n    if (ns_ !== '') {\n      urlPath += ns_ + '__';\n    }\n\n    /**\n     * Evento que dispara cuando el formulario empieza una remote action\n     */\n    function ajaxStart() {\n      fieloUtils.spinner.FieloSpinner.show();\n    }\n\n    /**\n     * Evento que dispara cuando el formulario termina una remote action\n     */\n    function ajaxStop() {\n      fieloUtils.spinner.FieloSpinner.hide();\n    }\n\n    /**\n     * Recarga el componente en su parent con la nueva vista\n     *\n     * @param  {HTMLelement} parentElement - Elemento HTML que contiene al item a cargar\n     * @param  {HTMLelement} beforeElement - Elemento HTML que es hermano de  parentElement\n     * @param  {string} url - URL al cual se hace la petición ajaz\n     */\n    function load(parentElement, beforeElement, url) {\n      ajaxStart(parentElement);\n      fieloUtils.ajax(url, false, function(body, status) {\n        if (status === 200) {\n          try {\n            if (\n              typeof beforeElement !== 'undefined' &&\n              beforeElement !== null\n            ) {\n              [].forEach.call(body.children, function(element) {\n                parentElement.insertBefore(element, beforeElement);\n              });\n            } else {\n              [].forEach.call(body.children, function(element) {\n                parentElement.appendChild(element);\n              });\n            }\n\n            oldLoader.dispatchEvent({\n              type: 'DOMContentReloaded',\n              target: parentElement,\n              module: 'components'\n            });\n            ajaxStop(parentElement);\n          } catch (e) {\n            ajaxStop(parentElement);\n            throw (e);\n          }\n        } else {\n          ajaxStop(parentElement);\n          throw new Error(\n            'There was an error loding the content: code error ' +\n            status,\n            'components.js'\n          );\n        }\n      });\n    }\n\n    return {\n      /**\n       * @method\n       * @summary Retorna el nombre del módulo\n       * @return {string} Nombre del módulo\n       */\n      getName: function() {\n        return name;\n      },\n\n      /**\n       * @method\n       * @summary Retorna la versión del módulo\n       * @return {string} Versión del módulo\n       */\n\n      getVersion: function() {\n        return version;\n      },\n\n      /**\n       * @method\n       * @summary Carga la vista real del contenedor del componente\n       * @param {DOMelement} component - Elemento que contiene el componente de Fielo\n       */\n\n      refreshView: function(component) {\n        var componentId = component.getAttribute('data-componentid');\n        var recordParameter = component.getAttribute('data-parameter-name');\n        var sObjectInput = component.querySelector('input[name=\"SObject.id\"]');\n        var recordId = null;\n        var urlToRequest = null;\n        if (sObjectInput) {\n          recordId = sObjectInput.getAttribute('value');\n        }\n\n        if (componentId === null) {\n          throw new Error(\n            'Cannot get component id',\n            'components.js'\n          );\n        } else {\n          urlToRequest = urlPath + 'Component?componentId=' + componentId;\n          if (recordId && recordParameter) {\n            urlToRequest += '&' + recordParameter + '=' + recordId;\n          }\n        }\n\n        var background = document.getElementById(componentId + '_background');\n        if (background !== null) {\n          background.parentNode.removeChild(background);\n        }\n        var componentParent = component.parentNode;\n        var componentSibling = component.nextSibling;\n        componentParent.removeChild(component);\n        load(\n          componentParent,\n          componentSibling,\n          urlToRequest\n        );\n      },\n\n      /**\n       * @method\n       * @summary Vuelve a la vista real del componente.\n       * Tiene que ser llamado luego del método switchView para evitar la\n       * llamada ajax, sino es lo mismo que refreshView\n       * @param {DOMelement} component - Elemento que contiene el componente de Fielo\n       */\n\n      switchBack: function(component) {\n        var componentId = component.getAttribute('data-componentid');\n        var background = document.getElementById(componentId + '_background');\n        var componentParent = component.parentNode;\n        var recordParameter = component.getAttribute('data-parameter-name');\n        var sObjectInput = component.querySelector('input[name=\"SObject.id\"]');\n        var recordId = null;\n        var urlToRequest = null;\n        if (sObjectInput) {\n          recordId = sObjectInput.getAttribute('value');\n        }\n        if (componentId === null) {\n          throw new Error(\n            'Cannot get component id',\n            'components.js'\n          );\n        } else {\n          // Si existe el component (lo esperado) lo elimina\n          componentParent.removeChild(component);\n\n          urlToRequest = urlPath + 'Component?componentId=' + componentId;\n          if (recordId && recordParameter) {\n            urlToRequest += '&' + recordParameter + '=' + recordId;\n          }\n        }\n\n        if (background === null) {\n          // sino existe background refresca  el component\n          load(componentParent, null, urlToRequest);\n        } else {\n          // Si existe el background lo muestra\n          background.classList.remove('hidden');\n          background.setAttribute('id', componentId + '_container');\n          // componentParent.appendChild(background);\n        }\n      },\n\n      /**\n       * @method\n       * @summary Carga una nueva vista del contenedor del componente\n       * sin perder el actual, el cual lo oculta.\n       * @param {DOMelement} component - Elemento que contiene el componente de Fielo\n       * @param {string} view - Vista a utilizar\n       */\n\n      switchView: function(component, view) {\n        var componentParent = component.parentNode;\n        var componentSibling = component.nextSibling;\n        var componentId = component.getAttribute('data-componentid');\n        var recordParameter = component.getAttribute('data-parameter-name');\n        var sObjectInput = component.querySelector('input[name=\"SObject.id\"]');\n        var recordId = null;\n        var urlToRequest = null;\n        if (sObjectInput) {\n          recordId = sObjectInput.getAttribute('value');\n        }\n\n        if (componentId === null) {\n          throw new Error(\n            'Cannot get component id',\n            'components.js'\n          );\n        } else {\n          // Si existe el component (lo esperado) lo elimina\n          urlToRequest = urlPath + 'Component?componentId=' + componentId;\n          if (recordId && recordParameter) {\n            urlToRequest += '&' + recordParameter + '=' + recordId;\n          }\n        }\n\n        var background = document.getElementById(componentId + '_background');\n        // Si existe un background lo elimina\n        if (background !== null) {\n          background.parentNode.removeChild(background);\n        }\n        // toma el container lo oculta, le cambia el id con un sufijo 'background'\n        component.classList.add('hidden');\n        component.setAttribute('id', componentId + '_background');\n        // Toma la posicion del componente dentro del padre y lo reparenta (al padre de su padre)\n        // componentParent.parentNode.appendChild(component);\n        // recarga el componente en su parent con la nueva vista\n        load(\n          componentParent,\n          componentSibling,\n          urlToRequest + '&view=' + view\n        );\n      },\n\n      /**\n       * @method\n       * @summary Carga una nueva vista de layout para el componente en\n       * el contenedor del componente\n       * @param {DOMelement} component - Elemento que contiene el componente de Fielo\n       * @param {string} view - Vista a utilizar\n       */\n\n      changeView: function(component, view) {\n        var componentId = component.getAttribute('data-componentid');\n        var urlToRequest = null;\n        if (componentId === null) {\n          throw new Error(\n            'Cannot get component id',\n            'components.js'\n          );\n        } else {\n          // Si existe el component (lo esperado) lo elimina\n          urlToRequest = urlPath + 'Component?componentId=' + componentId;\n        }\n        var componentParent = component.parentNode;\n        var componentSibling = component.nextSibling;\n        componentParent.removeChild(component);\n        load(\n          componentParent,\n          componentSibling,\n          urlToRequest + '&view=' + view\n        );\n      }\n    };\n  })();\n\n  oldLoader.loadModule(module);\n})();\n","(function() {\n  'use strict';\n\n  /**\n   * @description Módulo que inicializa los formularios\n   *\n   * @author Sebastian Claros <sebastian.claros@fielo.com>\n   * @version 1\n   * @module fielo/forms\n   * @see  fielo\n   */\n  var module = (function() {\n    // private\n    var version = '1';\n    var name = 'forms';\n    var submitionIsConfirmed = true;\n\n    /**\n     * Evento que dispara cuando el formulario empieza una remote action\n     *\n     * @param {HTMLelement} form - formulario a inicializar\n     */\n    function ajaxStart(form) {\n      [].forEach.call(form.querySelectorAll('button'), function(button) {\n        button.disabled = true;\n      });\n      fieloUtils.spinner.FieloSpinner.show();\n    }\n\n    /**\n     * Evento que dispara cuando el formulario termina una remote action\n     *\n     * @param {HTMLelement} form - formulario a inicializar\n     */\n    function ajaxStop(form) {\n      [].forEach.call(form.querySelectorAll('button'), function(button) {\n        button.disabled = false;\n      });\n      fieloUtils.spinner.FieloSpinner.hide();\n    }\n\n    /**\n     * Refresca toda la información que fue enviada con los valores que el controlador cambio\n     *\n     * @param {HTMLelement} form - formulario a inicializar\n     * @param {json} data - Data en formato JSON\n     */\n    function refreshDataObject(form, data) {\n      // Busca todos los elementos que puede envia\n      var fields = form.querySelectorAll('input,select,textarea');\n\n      for (var i = 0, maxFields = fields.length; i < maxFields; i++) {\n        // Solo envia los que tengan el campo Name\n        if (\n          typeof fields[i].name !== 'undefined' &&\n          fields[i].name !== '' &&\n          fields[i].name !== 'g-recaptcha-response'\n        ) {\n          // Obtiene el valor a enviar\n          var parent = data;\n          var parts = fields[i].name.split('.');\n          var j = 0;\n          var max;\n\n          for (\n            j = 0, max = parts.length - 1;\n            (typeof parent[parts[j]] !== 'undefined') && j < max; j++\n          ) {\n            parent = parent[parts[j]];\n          }\n          if (typeof parent[parts[j]] !== 'undefined') {\n            fields[i].value = parent[parts[j]];\n            oldLoader.dispatchElementEvent(fields[i], 'change');\n          }\n        }\n      }\n    }\n\n    /**\n     * Recauda toda la información que tiene que ser envíada como JSON\n     *\n     * @param {HTMLelement} form - formulario a inicializar\n     * @return {json} Data en formato JSON\n     */\n    function submitDataObject(form) {\n      var data = {};\n      // Busca todos los elementos que puede envia\n      var fields = form.querySelectorAll('input,select,textarea');\n      for (var i = 0, maxFields = fields.length; i < maxFields; i++) {\n        // Obtiene el valor a enviar\n        var value = fields[i].value;\n        // Solo envia los que tengan el campo Name\n        if (\n          typeof fields[i].name !== 'undefined' && fields[i].name !==\n          '' &&\n          fields[i].name !== 'g-recaptcha-response' &&\n          (fields[i].getAttribute('type') !== 'date' || value !== '')\n        ) {\n          // En caso de ser una fecha la transforma\n          if (fields[i].getAttribute('type') === 'date') {\n            value = Date.parse(value);\n          }\n          // Posiciona a parent y crea la estrutura necesaria de acuerdo al namespace del name\n          // Por ejemplo si name=ArgumentName.Object.Property y value es 'test' dejara:\n          // { ArgumentName: { Object: { Property: 'test' } } }\n          var parent = data;\n          var parts = fields[i].name.split('.');\n          var j = 0;\n          var max;\n          if (parts[0] !== 'Local') {\n            for (j = 0, max = parts.length - 1; j < max; j++) {\n              if (typeof parent[parts[j]] === 'undefined') {\n                parent[parts[j]] = {};\n              }\n              parent = parent[parts[j]];\n            }\n            parent[parts[j]] = value;\n          }\n        }\n      }\n      return data;\n    }\n\n    /**\n     * Envía el formulario para aquellos de la vista view\n     *\n     * @param {HTMLelement} form - formulario a inicializar\n     * @param {event} event - Evento de JS remoting\n     */\n    function submitForm(form, event) {\n      event.preventDefault();\n      if (submitionIsConfirmed) {\n        if (form.checkValidity() === false) {\n          fieloUtils.debug.log('Form is invalid !');\n        } else {\n          try {\n            ajaxStart(form);\n            // Obtiene la remote action del form\n            var remoteAction = form.getAttribute('data-remoteaction');\n            if (typeof remoteAction === 'undefined' || remoteAction ===\n              null) {\n              // Registro el NS\n              var ns_ = fieloUtils.site.FieloSite.ns;\n              if (ns_ !== '') {\n                ns_ += '.';\n              }\n              remoteAction = ns_ + 'PageController.remoteComponentAction';\n            }\n            // Arma un objeto con toda la data que tiene que enviar\n            var dataToSubmit = submitDataObject(form);\n            var argument;\n            // Obtiene el orden de los argumentos a enviar, en caso de no venir toma el que proceso submitData\n            var remoteArguments = form.getAttribute('data-remotearguments');\n            if (\n              typeof remoteArguments !== 'undefined' &&\n              remoteArguments !== null\n            ) {\n              remoteArguments = remoteArguments.split(',');\n              // Valida que toda la data va a ser enviada\n              for (argument in dataToSubmit) {\n                if (remoteArguments.indexOf(argument) < 0) {\n                  throw new Error(\n                    'Unkown remote argument ' + argument,\n                    'forms.js',\n                    152\n                  );\n                }\n              }\n            } else {\n              remoteArguments = Object.keys(dataToSubmit);\n            }\n            // Arma el array de argumentos para el Invoke\n            var invokeData = [remoteAction];\n            for (var i = 0, max = remoteArguments.length; i < max; i++) {\n              if (typeof dataToSubmit[remoteArguments[i]] ===\n                'undefined') {\n                invokeData.push(null);\n              } else if (\n                typeof dataToSubmit[remoteArguments[i]] !== 'object' ||\n                remoteArguments[i] === 'SObject'\n              ) {\n                invokeData.push(dataToSubmit[remoteArguments[i]]);\n              } else {\n                invokeData.push(\n                  JSON.stringify(dataToSubmit[remoteArguments[i]])\n                );\n              }\n            }\n            invokeData.push(function(result, event) {\n              processRemoteActionResult(result, event, form);\n            });\n            invokeData.push({\n              escape: false\n            });\n\n            Visualforce.remoting.Manager.invokeAction.apply(\n              Visualforce.remoting.Manager, invokeData\n            );\n          } catch (e) {\n            ajaxStop(form);\n            fieloUtils.debug.log(e);\n          }\n        }\n      }\n      submitionIsConfirmed = true;\n    }\n\n    /**\n     * Callback para acciones remotas de la vista Form\n     *\n     * @param {object} result - Resultado de JS Remoting\n     * @param {event} event - Evento de JS remoting\n     * @param {HTMLelement} form - formulario a inicializar\n     * @return {boolean} false\n     */\n    function processRemoteActionResult(result, event, form) {\n      try {\n        // Coloco los mensajes de error o de exito segun corresponda\n        if (event.status && result !== undefined) {\n          var error = false;\n          if (typeof result.messages !== 'undefined') {\n            for (\n              var index = 0, maximun = result.messages.length;\n              index < maximun;\n              index++\n            ) {\n              if (\n                result.messages[index]\n                  .severity.toLowerCase() === 'ERROR'.toLowerCase() ||\n                result.messages[index]\n                  .severity.toLowerCase() === 'FATAL'.toLowerCase()\n              ) {\n                error = true;\n                break;\n              }\n            }\n          }\n          var cancelButton = form.querySelector('.fielo-button__cancel');\n          var componentContainer =\n            fieloUtils.getParentUntil(form, '.fielo-js-component');\n          var messageSummary = [];\n          var severity = '';\n\n          // Si viene de un formulario de envío de datos como login / registrar, etc\n          // No tienen botón cancel\n          // No son formularios de edición de datos\n          if (\n            cancelButton === null ||\n            cancelButton.classList.contains('hidden')\n          ) {\n            if (result.messages !== undefined && result.messages.length > 0) {\n              // Guardo los mensajes en un arreglo\n              result.messages.forEach(function(element) {\n                messageSummary.push(element.summary);\n              });\n\n              // guardo la severidad\n              if (result.messages.length > 0) {\n                severity = result.messages[0].severity || '';\n                fieloUtils.message.FieloMessage.clear();\n                fieloUtils.message.FieloMessage.addMessages(messageSummary);\n                fieloUtils.message.FieloMessage.setType(severity);\n              }\n              // Si no hay errores\n              if (!error) {\n                // y hay redirect => muestra el mensaje y hace el redirect\n                // # = refresh\n                // si hay refresh\n                if (result.redirectURL === '#') {\n                  oldLoader.components.refreshView(componentContainer);\n                } else if (result.redirectURL !== undefined) {\n                  // Si hay redirect\n                  // fieloUtils.decodeHTMLEntities(result.redirectURL);\n                  fieloUtils.message.FieloMessage.setRedirect(\n                    fieloUtils.decodeHTMLEntities(result.redirectURL),\n                    6\n                  );\n                }\n\n                //  si no hay refresh => remueve el form\n                if (\n                  result.refresh === undefined ||\n                  result.refresh.length === 0\n                ) {\n                  // Caso del Register step 2\n                  form.parentNode.removeChild(form);\n                }\n              }\n\n              if (result.messages.length > 0) {\n                fieloUtils.message.FieloMessage.show();\n              }\n              messageSummary.length = 0;\n            } else if (result.redirectURL !== undefined) {\n              // si no hay mensajes y hay redirect o refresh\n\n              // # = refresh\n              // si hay refresh\n              if (result.redirectURL === '#') {\n                oldLoader.components.refreshView(componentContainer);\n              } else {\n                // Si hay redirect\n                window.location.href =\n                  fieloUtils.decodeHTMLEntities(result.redirectURL);\n              }\n            } else if (\n              result.refresh === undefined ||\n              result.refresh.length === 0\n            ) {\n              // No hay mensajes, no hay redirect y no hay refresh\n              oldLoader.components.refreshView(componentContainer);\n            } else if (\n                result.refresh.length > 0 &&\n                result.refresh[0].name === 'refresh'\n            ) {\n              oldLoader.components.refreshView(componentContainer);\n            }\n          } else {\n            // Si viene de un formulario con boton para cancelar la edición\n            if (\n              !error &&\n              (result.refresh === undefined || result.refresh.length === 0)\n            ) {\n              // Si no hay Error y no tiene refresh Vuelve al Modo Detail\n              oldLoader.components.refreshView(componentContainer);\n            }\n\n             // Guardo los mensajes en un arreglo\n            result.messages.forEach(function(element) {\n              messageSummary.push(element.summary);\n            });\n\n            // guardo la severidad\n            if (result.messages.length > 0) {\n              severity = result.messages[0].severity || '';\n              fieloUtils.message.FieloMessage.clear();\n              fieloUtils.message.FieloMessage.addMessages(messageSummary);\n              fieloUtils.message.FieloMessage.setType(severity);\n              fieloUtils.message.FieloMessage.show();\n            }\n\n            messageSummary.length = 0;\n          }\n\n          // Refresca los elementos correspondientes\n          if (result.refresh !== undefined && result.refresh.length > 0) {\n            var data = {};\n            for (var i = 0, max = result.refresh.length; i < max; i++) {\n              data[result.refresh[i].name] = result.refresh[i].value;\n            }\n            refreshDataObject(form, data);\n          }\n          var objectName = form.getAttribute('data-remoteobject');\n          if (objectName !== null) {\n            oldLoader.dispatchEvent({\n              type: 'ObjectChange',\n              target: document,\n              module: 'form',\n              object: objectName\n            });\n          }\n        } else {\n          fieloUtils.debug.log(event);\n        }\n        ajaxStop(form);\n      } catch (e) {\n        ajaxStop(form);\n        throw (e);\n      }\n      return false;\n    }\n\n    /**\n     * Inicializa el Add to Cart\n     *\n     * @param {HTMLelement} input - Input que contiene el estado\n     * @param {HTMLelement} form - formulario a inicializar\n     */\n    function addToCartEvent(input, form) {\n      if (input.value === '' || input.value === '0') {\n        form.classList.remove('active');\n        input.value = 0;\n      } else {\n        form.classList.add('active');\n      }\n    }\n\n    /**\n     * Setea el atributo data-remoteaction del formulario por el valor del boton\n     *\n     * @param {HTMLelement} button - botón\n     * @param {HTMLelement} form - formulario a inicializar\n     */\n    function clickActionButton(button, form) {\n      var remoteaction = button.getAttribute('data-remoteaction');\n      form.setAttribute('data-remoteaction', remoteaction);\n    }\n\n    /**\n     * Lleva la cantidad a 0 de ese registro y envía el formulario\n     *\n     * @param {HTMLelement} link - Enlace por el cual empezar a buscar el registro\n     * @param {HTMLelement} form - formulario a inicializar\n     */\n    function clickDeleteButton(link, form) {\n      if (form.classList.contains('fielo-form__shopping-cart')) {\n        if (submitionIsConfirmed) {\n          var record = fieloUtils.getParentUntil(link, '.fielo-record');\n          var quantity = record.querySelector('.fielo-shopping__quantity');\n          quantity.value = 0;\n          var save = form.querySelector('.fielo-button__save');\n          save.click();\n          record.parentElement.removeChild(record);\n          record = quantity = save = null;\n        }\n      }\n    }\n\n    /**\n     * Agrega la necesidad de un confirm\n     */\n    function hasToConfirmButton() {\n      if (confirm(fieloUtils.site.FieloSite.getLabel('areYouSure'))) {\n        submitionIsConfirmed = true;\n      } else {\n        submitionIsConfirmed = false;\n      }\n    }\n\n    /**\n     * Refresca el contenido del shopping cart\n     */\n\n    /*\n    function refreshShoppingCart() {\n      var form = document.querySelector('.fielo-form__shopping-cart');\n      if (form !== null) {\n        var componentContainer = fieloUtils.getParentUntil(\n          form,\n          '.fielo-js-component'\n        );\n        oldLoader.components.refreshView(componentContainer);\n        componentContainer = form = null;\n      }\n    }\n    */\n\n    /**\n     * Agrega / Quita la clase active según el estado del input del Wish o Like\n     *\n     * @param {HTMLelement} input - Input que contiene el estado\n     * @param {HTMLelement} form - formulario a inicializar\n     */\n    function likeWishEvent(input, form) {\n      if (input.value === 'false' || input.value === '') {\n        form.classList.remove('active');\n      } else {\n        form.classList.add('active');\n      }\n    }\n\n    /**\n     * Permite subir una imagen\n     *\n     * @param {HTMLelement} form - formulario a inicializar\n     * @param {string} apiName [description]\n     * @param {event} event - evento disparado\n     */\n    function imageUploadEvent(form, apiName, event) {\n      var input = event.target;\n      var extensions = ['png', 'gif', 'jpg', 'jpeg', 'bmp'];\n      var buttonSubmit = form.querySelector('.fielo-button__submit');\n      var archiveExtension = input.value.split('.');\n      if (\n        extensions.indexOf(archiveExtension[archiveExtension.length - 1]\n          .toLowerCase()) > -1\n      ) {\n        fieloUtils.message.FieloMessage.clear();\n        var reader = new FileReader();\n        reader.onload = function() {\n          var dataURL = reader.result;\n          var inputData = form.querySelector('.fielo-image-upload__input');\n          inputData.value = dataURL;\n        };\n        reader.readAsDataURL(input.files[0]);\n        buttonSubmit.disabled = false;\n        buttonSubmit.classList.remove('disabled');\n      } else {\n        buttonSubmit.classList.add('disabled');\n        buttonSubmit.disabled = true;\n        fieloUtils.message.FieloMessage.clear();\n        fieloUtils.message.FieloMessage\n          .addMessages(fieloUtils.site.FieloSite.getLabel('errorImageType'));\n        fieloUtils.message.FieloMessage.setType('error');\n        fieloUtils.message.FieloMessage.show();\n      }\n    }\n\n    /**\n     * Inicializa el captcha de Google\n     */\n    function captchaEvent() {\n      var inputData = document.querySelector('.fielo-js-captcha__input');\n      inputData.value = grecaptcha.getResponse();\n    }\n\n    /**\n     * Muestra / Oculta el campo password\n     *\n     * @param {HTMLelement} form - formulario a inicializar\n     */\n    function toogleForgotPassword(form) {\n      var toogleLink = form.querySelector('.fielo-login__link');\n      var inputPassword =\n        form.querySelector('.fielo-field--is-password input');\n      var labelUserName =\n        form.querySelector('.fielo-field--is-username label');\n      var fieldPassword = form.querySelector('.fielo-field--is-password');\n      // toogle username label\n      var oldInputLabel = labelUserName.innerText;\n      var newInputLabel = labelUserName.getAttribute('data-switchlabel');\n      labelUserName.innerText = newInputLabel;\n      labelUserName.setAttribute('data-switchlabel', oldInputLabel);\n      // toogle link description\n      var oldLinkLabel = toogleLink.innerText;\n      var newLinkLabel = toogleLink.getAttribute('data-switchlabel');\n      toogleLink.innerText = newLinkLabel;\n      toogleLink.setAttribute('data-switchlabel', oldLinkLabel);\n      // Obtiene el Controlador con el namespace en caso de que exista\n      var remoteController = form.getAttribute('data-remoteaction');\n      remoteController = remoteController\n        .substring(0, remoteController.lastIndexOf('.') + 1);\n      // Toogle Password Visibility & Form Action\n      if (\n        fieldPassword.classList.contains('hidden')\n      ) {\n        fieldPassword.classList.remove('hidden');\n        inputPassword.setAttribute('required', 'true');\n        inputPassword.setAttribute('name', 'password');\n        form.setAttribute('data-remoteaction', remoteController + 'login');\n        form.setAttribute('data-remotearguments', 'username,password');\n      } else {\n        fieldPassword.classList.add('hidden');\n        inputPassword.removeAttribute('required');\n        inputPassword.setAttribute('name', 'Local.password');\n        form.setAttribute(\n          'data-remoteaction',\n          remoteController + 'forgotPassword'\n        );\n        form.setAttribute('data-remotearguments', 'username');\n      }\n    }\n\n    /**\n     * Agrega event listeners click al botón Cancel\n     *\n     * @param {HTMLelement} form - formulario a inicializar\n     * @param {boolean} reload - Verdadero o falso para recargar con el evento DOMContentReloaded\n     */\n    function addFormListener(form, reload) {\n      // Agrega el evento onclick al boton cancel\n      var cancel = form.querySelector('.fielo-button__cancel');\n      if (cancel !== null) {\n        cancel.addEventListener('click', function() {\n          var componentContainer = fieloUtils\n            .getParentUntil(form, '.fielo-js-component');\n          oldLoader.components.switchBack(componentContainer);\n        });\n        if (reload === true) {\n          cancel.classList.remove('hidden');\n        }\n      }\n      cancel = undefined;\n    }\n\n    /**\n     * Agrega event listeners click para el boton login\n     *\n     * @param {HTMLelement} form - formulario a inicializar\n     */\n    function addLoginListener(form) {\n      // Agrega el evento onclick al boton forgot password\n      var forgot = form.querySelector('.fielo-login__link');\n      if (forgot) {\n        forgot.addEventListener('click', function() {\n          toogleForgotPassword(form);\n        });\n      }\n      forgot = undefined;\n    }\n\n    /**\n     * Agrega event listeners blur, invalid, valid para los diferentes elementos input del formulario\n     *\n     * @param {HTMLelement} form - formulario a inicializar\n     */\n    function addInputFieldListener(form) {\n      // Inicializa los fields del form\n      var inputs = form.querySelectorAll('.fielo-input.fielo-js-upgrade');\n      for (var i = 0, max = inputs.length; i < max; i++) {\n        var input = inputs[i];\n        var required = input.getAttribute('data-required');\n        if (required === 'true') {\n          input.setAttribute('required', 'true');\n        }\n        var type = input.getAttribute('data-type');\n        if (type !== null) {\n          type = type.toLowerCase();\n          if (type === 'picklist') {\n            var value = input.getAttribute('data-value');\n            input.value = value;\n          } else {\n            if (\n              type !== 'url' && type !== 'email' &&\n              type !== 'dateTime' && type !== 'date'\n            ) {\n              if (type === 'phone') {\n                type = 'tel';\n              } else if (\n                type === 'double' || type === 'integer' ||\n                type === 'percent' || type === 'currency'\n              ) {\n                type = 'number';\n              } else if (type === 'boolean') {\n                type = 'checkbox';\n              } else {\n                type = 'text';\n              }\n            }\n            if (type === 'date' && input.value !== '') {\n              var d = new Date(input.value);\n              var dt = d.getTime();\n              // mueve las horas del uso horario\n              if (!isNaN(dt)) {\n                d = new Date(dt + (d.getTimezoneOffset() * 60000));\n                var mm = (d.getMonth() + 1);\n                var dd = d.getDate();\n                input.value = d.getFullYear() + '-' + (mm < 10 ? '0' :\n                    '') +\n                  mm + '-' + (dd < 10 ? '0' : '') + dd;\n              }\n            }\n            input.setAttribute('type', type);\n          }\n        }\n        input.addEventListener('blur', addDirtyClass);\n        input.addEventListener('invalid', addDirtyClass);\n        input.addEventListener('valid', addDirtyClass);\n      }\n      inputs = undefined;\n    }\n\n    /**\n     * Agrega la clase dirty al elemento que es origen del evento\n     *\n     * @param {event} event evento que disparo esta llamada\n     */\n    function addDirtyClass(event) {\n      event.srcElement.classList.toggle('fielo-input--is-dirty', true);\n    }\n\n    /**\n     * Inicializa los elementos de un formulario\n     *\n     * @param {HTMLelement} form - formulario a inicializar\n     * @param {boolean} reload - Verdadero o falso para recargar con el evento DOMContentReloaded\n     */\n    function contentLoadedForm(form, reload) {\n      if (\n        typeof form !== 'undefined' &&\n        form.classList.contains('fielo-js-upgrade')\n      ) {\n        // Agrega el evento onsubmit al form\n        form.addEventListener('submit', submitForm.bind(null, form),\n          false);\n\n        // Si es un form agrega los Listener a los botones\n        addFormListener(form, reload);\n        // Si es un Login agrega los Listener a los botones\n        addLoginListener(form);\n\n        // Agrega los Listener a los inputs\n        addInputFieldListener(form);\n      }\n      // Inicializa los Captcha\n      var isCaptcha = form.querySelector('.g-recaptcha');\n      if (isCaptcha !== null) {\n        var body = document.getElementsByTagName('body')[0];\n        var script = document.createElement('script');\n        script.type = 'text/javascript';\n        script.src = 'https://www.google.com/recaptcha/api.js';\n        body.appendChild(script);\n        window.captchaEvent = oldLoader.forms.captchaEvent;\n      }\n      // Inicializa los submit buttons\n      [].forEach.call(\n        form.querySelectorAll('.fielo-button.fielo-js-upgrade'),\n        function(button) {\n          button.addEventListener(\n            'click',\n            clickActionButton.bind(null, button, form)\n          );\n          /*\n          // todo: ver refresh shopping cart\n\n          if (button.classList.contains('fielo-button__submit--is-add-to-cart')) {\n            oldLoader.addEventListener('ObjectChange', refreshShoppingCart);\n          }\n          */\n        }\n      );\n\n      // Inicializa los confirm buttons\n      [].forEach.call(\n        form.querySelectorAll(\n          '.fielo-js-confirm'),\n        function(link) {\n          link.addEventListener(\n            'click',\n            hasToConfirmButton.bind(null)\n          );\n        }\n      );\n\n      // Inicializa los delete buttons\n      [].forEach.call(\n        form.querySelectorAll(\n          '.fielo-button__delete.fielo-js-upgrade'),\n        function(link) {\n          link.addEventListener(\n            'click',\n            clickDeleteButton.bind(null, link, form)\n          );\n        }\n      );\n\n      // Inicializa los Image Upload\n      [].forEach.call(\n        form.querySelectorAll(\n          '.fielo-image-upload.fielo-js-upgrade'),\n        function(input) {\n          input.addEventListener(\n            'change',\n            imageUploadEvent.bind(null, form, input.name)\n          );\n        }\n      );\n      // Inicializa los Like y Wish\n      [].forEach.call(\n        form.querySelectorAll(\n          '.fielo-like,.fielo-wish'\n        ),\n        function(input) {\n          input.addEventListener(\n            'change',\n            likeWishEvent.bind(null, input, form)\n          );\n          // Lo llama para inicializar por primera vez\n          likeWishEvent(input, form);\n        }\n      );\n      // Inicializa los addToCart\n      [].forEach.call(\n        form.querySelectorAll(\n          '.fielo-form__quantity-in-cart.fielo-js-upgrade'\n        ),\n        function(input) {\n          input.addEventListener(\n            'change',\n            addToCartEvent.bind(null, input, form)\n          );\n          // Lo llama para inicializar por primera vez\n          addToCartEvent(input, form);\n        }\n      );\n\n      /*\n\n      // El componente no esta funcionando desde apex\n      // Inicializa los subcomponentes de Facebook\n      [].forEach.call(form.querySelectorAll(\n          '.fielo-facebook.fielo-js-upgrade'\n        ),\n        function(container) {\n          var link = container.getElementsByTagName('a')[0];\n          var siteUrl = container.getAttribute('data-siteurl');\n          var organizationId = container.getAttribute('data-organizationid');\n          var sandboxPattern =\n            new RegExp('(.*\\\\.)?cs[0-9]*(-api)?\\\\..*force.com', 'i');\n          if (sandboxPattern.test(siteUrl)) {\n            // Case is sandbox\n            link.setAttribute('href',\n              'https://test.salesforce.com/services/auth/test/' +\n              organizationId + '/FacebookLogin?site=' + siteUrl);\n          } else {\n            // Case is production\n            siteUrl = siteUrl.replace('http:', 'https:');\n            if ((siteUrl.indexOf('developer-edition.') === -1)) {\n              // If not contains secure.force add it\n              if (siteUrl.indexOf('secure.force') === -1) {\n                siteUrl = siteUrl.replace('.force', '.secure.force');\n              }\n            }\n            link.setAttribute('href',\n              'https://login.salesforce.com/services/auth/sso/' +\n              organizationId + '/FacebookLogin?site=' + siteUrl);\n          }\n          // container.classList.remove('fielo-facebook.fielo-js-upgrade');\n        }\n      );\n      */\n      form = undefined;\n    }\n    return {\n\n      /**\n       * @summary Retorna el nombre del módulo\n       *\n       * @method\n       * @return {string} Nombre del módulo\n       */\n      getName: function() {\n        return name;\n      },\n\n      /**\n       * @summary Retorna la versión del módulo\n       * @method\n       *\n       * @return {string} Versión del módulo\n       */\n      getVersion: function() {\n        return version;\n      },\n\n      /**\n       * @summary Guarda en el atributo value de .fielo-js-captcha__input\n       * @method\n       *\n       * la respuesta del captcha de google\n       **/\n      captchaEvent: captchaEvent,\n\n      /**\n       * @summary Inicializa  los formularios y registra los eventos\n       * DOMContentLoaded y DOMContentReloaded\n       * @method\n       **/\n      initialize: function() {\n        oldLoader.addEventListener(\n          'DOMContentLoaded',\n          this.contentLoaded.bind(this)\n        );\n        oldLoader.addEventListener(\n          'DOMContentReloaded',\n          this.contentLoaded.bind(this)\n        );\n      },\n\n      /**\n       * @summary Inicializa  los elementos de los formularios\n       * de todas las vistas de formulario\n       * @method\n       *\n       * @param {object} event - evento a analizar\n       **/\n      contentLoaded: function(event) {\n        var forms = event.target\n          .querySelectorAll('.fielo-form .fielo-js-upgrade');\n        var i;\n        var max;\n        for (i = 0, max = forms.length; i < max; i++) {\n          contentLoadedForm(forms[i], event.type === 'DOMContentReloaded');\n        }\n        for (i = 0, max = forms.length; i < max; i++) {\n          forms[i].classList.remove('fielo-js-upgrade');\n        }\n        forms = undefined;\n      }\n    };\n  })();\n\n  oldLoader.loadModule(module);\n})();\n","(function() {\n  'use strict';\n\n  /**\n   * @description Módulo que inicializa los formView\n   * @author Sebastian Claros <sebastian.claros@fielo.com>\n   * @version 1\n   * @exports fielo/formView\n   * @see  fielo\n   */\n\n  var module = (function() {\n    // private\n    var version = '1';\n    var name = 'formView';\n\n     /**\n      * Agrega los eventos de onclick en los Botones Cancel, Edit\n      * @param {HRMLelement} detail - component Id of Fielo\n      * @private\n      */\n    function contentLoadedDetail(detail) {\n      // Agrega el evento onclick al boton edit\n      var edit = detail.querySelector('.fielo-button__edit');\n      if (edit) {\n        edit.addEventListener('click', function() {\n          oldLoader.components.switchView(detail, 'Edit');\n        });\n      }\n      edit = undefined;\n    }\n    return {\n\n      /**\n       * @method\n       * @summary Retorna el nombre del módulo\n       * @return {string} Nombre del módulo\n       */\n      getName: function() {\n        return name;\n      },\n\n      /**\n       * @method\n       * @summary Retorna la versión del módulo\n       * @return {string} Versión del módulo\n       */\n\n      getVersion: function() {\n        return version;\n      },\n\n      /**\n       * @method\n       * @summary Recarga la vista del componente\n       * @param {object} event - evento a analizar\n       */\n      refreshDetail: function(event) {\n        var details = event.target.querySelectorAll(\n          '.fielo-form-view,.fielo-content[data-remoteobject=' +\n          event.object + ']'\n        );\n        for (var i = 0, max = details.length; i < max; i++) {\n          oldLoader.components.refreshView(details[i]);\n        }\n      },\n\n      /**\n       * @method\n       * @summary Inicializa los details y registra los eventos\n       * DOMContentLoaded y DOMContentReloaded\n       */\n      initialize: function() {\n        oldLoader.addEventListener(\n          'DOMContentLoaded',\n          this.contentLoaded.bind(this)\n        );\n\n        oldLoader.addEventListener(\n          'DOMContentReloaded',\n          this.contentLoaded.bind(this)\n        );\n\n        oldLoader\n          .addEventListener('ObjectChange', this.refreshDetail.bind(this));\n      },\n\n      /**\n       * @method\n       * @summary Inicializa  los elementos de los formularios\n       * de todas las vistas de formulario\n       *\n       * @param {object} event - evento a analizar\n       */\n      contentLoaded: function(event) {\n        var details = event.target\n          .querySelectorAll('.fielo-form-view.fielo-js-upgrade');\n        var i;\n        var max;\n        for (i = 0, max = details.length; i < max; i++) {\n          contentLoadedDetail(details[i], event.type === 'DOMContentReloaded');\n        }\n        for (i = 0, max = details.length; i < max; i++) {\n          details[0].classList.remove('fielo-js-upgrade');\n        }\n        details = undefined;\n      }\n    };\n  })();\n\n  oldLoader.loadModule(module);\n})();\n","(function() {\n  'use strict';\n\n  var FieloOldLoaderTrigger = function FieloOldLoaderTrigger() {\n    oldLoader.dispatchEvent({type: 'DOMContentLoaded', target: document});\n  };\n  window.FieloOldLoaderTrigger = FieloOldLoaderTrigger;\n\n  // El componente se registra por si solo.\n  // Asume que el componentHandler esta habilitado en el scope global\n  componentHandler.register({\n    constructor: FieloOldLoaderTrigger,\n    classAsString: 'FieloOldLoaderTrigger',\n    cssClass: 'fielo-js-old-loader-trigger',\n    widget: false\n  });\n})();\n"],"sourceRoot":"/source/"}